{"config":{"indexing":"full","lang":["es"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Proyecto Especial 4 Este trabajo tiene como titulo \"Proyecto en Internet of Things (IoT)\", desarrollado por el estudiante Juan Manuel Cano en acompa\u00f1amiento del profesor Davinson Casta\u00f1o. El objetivo general del proyecto es generar demostraciones de aplicaciones de sistemas IoT. El proyecto cuenta con 3 objetivos especificos, que son, la realizacion del Estado del Arte, desarollo de pr\u00e1cticas de sistemas IoT y la implementaci\u00f3n de las practicas previamente desarrolladas. Se espera que el proyecto tenga un alcance, el cual consiste de una bit\u00e1cora, paquetes de practicas y una demostraci\u00f3n final asignada por el docente tutor.","title":"Proyecto Especial 4"},{"location":"#proyecto-especial-4","text":"Este trabajo tiene como titulo \"Proyecto en Internet of Things (IoT)\", desarrollado por el estudiante Juan Manuel Cano en acompa\u00f1amiento del profesor Davinson Casta\u00f1o. El objetivo general del proyecto es generar demostraciones de aplicaciones de sistemas IoT. El proyecto cuenta con 3 objetivos especificos, que son, la realizacion del Estado del Arte, desarollo de pr\u00e1cticas de sistemas IoT y la implementaci\u00f3n de las practicas previamente desarrolladas. Se espera que el proyecto tenga un alcance, el cual consiste de una bit\u00e1cora, paquetes de practicas y una demostraci\u00f3n final asignada por el docente tutor.","title":"Proyecto Especial 4"},{"location":"Bitacora/1-Glosario/","text":"1. Glosario IOT (Internet of Things) : hace referencia al internet de las cosas, lo que significa la interconexi\u00f3n o agrupaci\u00f3n de dispositivos y objetos a traves de una red. HTTP (Hypertext Transfer Protocol) : Es el nombre dado a un protocolo que permite la petici\u00f3n de datos y recursos. Es la base para el intercambio de datos en la web. MQTT (Message Queue Telemetry Transport) : Es un protocolo de comunicaci\u00f3n Maquina a Maquina (M2M, por sus siglas en ingles). RFID (Radio-frequency identification) : Es una forma de comunicaci\u00f3n inalambrica para compartir datos o identificar objetos medianto radio frecuencias. Web sem\u00e1ntica : Es un aplicaci\u00f3n de la web, por medio de la cual se intenta realizar un filtrado de manera autompatica pero precisa de la informaci\u00f3n, adem\u00e1s que sea legible tanto para humanos como para m\u00e1quinas. Big Data : Hace referencia a conjuntos de datos tan grandes y complejos que precisan de aplicaciones informaticas no tradicionales de procesamiento de datos para tratarlos adecuadamente. Broker : es el programa que se encarga de recepcionar los mensajes enviados por los clientes y distribuirlos entre s\u00ed en un sistema pub-sub. MySQL : es un sistema de gestion de base de datos. SSL (Secure Sockets Layer) : es un certificado digital que autentica la identidad de un sitio web y habilita una conexion cifrada. API (Interfaz de programacion de aplicaciones) : Se puede considerar como un contrato de servicios entre dos apliaciones. Cosas u objetos : combinaci\u00f3n entre tarjetas de desarrollo (microcontroladores o microprocesadores), sensores para recolectar la informaci\u00f3n y actuadores para realizar acciones. Gateways : dispositivos de red que se utilizan para filtrar, pre-procesar y mover datos entre las Cosas y las aplicaciones alojadas en la nube. Nube (Cloud) : servidor con IP p\u00fablica en el cual se alojan las aplicaciones de comunicaci\u00f3n con las cosas, aplicaciones de almacenamiento de informaci\u00f3n y aplicaciones para a interacci\u00f3n con el usuario. Bases de datos : espacio en la nube que permite almacenar todos los datos recolectados por las cosas en un determinado formato, por lo general tablas o documentos. Machine Learning : aplicaci\u00f3n alojada en la nube con el fin de generar los modelos que luego son utilizados por las aplicaciones de control. Aplicaciones de usuario : aplicaciones alojadas en la nube que permiten a los usuarios monitorizar el control de sus cosas conectadas. TCP/IP (Transmission Control Protcol/Internet Protocol) : Protocolo de enlace de datos que se usa en Internet para que los ordenadores y otros dispositivos env\u00eden y reciban datos. T\u00f3pico : Es la forma de identificar los datos que llegan al intermediario MQTT y saber a donde van dirigidos.","title":"1. Glosario"},{"location":"Bitacora/1-Glosario/#1-glosario","text":"IOT (Internet of Things) : hace referencia al internet de las cosas, lo que significa la interconexi\u00f3n o agrupaci\u00f3n de dispositivos y objetos a traves de una red. HTTP (Hypertext Transfer Protocol) : Es el nombre dado a un protocolo que permite la petici\u00f3n de datos y recursos. Es la base para el intercambio de datos en la web. MQTT (Message Queue Telemetry Transport) : Es un protocolo de comunicaci\u00f3n Maquina a Maquina (M2M, por sus siglas en ingles). RFID (Radio-frequency identification) : Es una forma de comunicaci\u00f3n inalambrica para compartir datos o identificar objetos medianto radio frecuencias. Web sem\u00e1ntica : Es un aplicaci\u00f3n de la web, por medio de la cual se intenta realizar un filtrado de manera autompatica pero precisa de la informaci\u00f3n, adem\u00e1s que sea legible tanto para humanos como para m\u00e1quinas. Big Data : Hace referencia a conjuntos de datos tan grandes y complejos que precisan de aplicaciones informaticas no tradicionales de procesamiento de datos para tratarlos adecuadamente. Broker : es el programa que se encarga de recepcionar los mensajes enviados por los clientes y distribuirlos entre s\u00ed en un sistema pub-sub. MySQL : es un sistema de gestion de base de datos. SSL (Secure Sockets Layer) : es un certificado digital que autentica la identidad de un sitio web y habilita una conexion cifrada. API (Interfaz de programacion de aplicaciones) : Se puede considerar como un contrato de servicios entre dos apliaciones. Cosas u objetos : combinaci\u00f3n entre tarjetas de desarrollo (microcontroladores o microprocesadores), sensores para recolectar la informaci\u00f3n y actuadores para realizar acciones. Gateways : dispositivos de red que se utilizan para filtrar, pre-procesar y mover datos entre las Cosas y las aplicaciones alojadas en la nube. Nube (Cloud) : servidor con IP p\u00fablica en el cual se alojan las aplicaciones de comunicaci\u00f3n con las cosas, aplicaciones de almacenamiento de informaci\u00f3n y aplicaciones para a interacci\u00f3n con el usuario. Bases de datos : espacio en la nube que permite almacenar todos los datos recolectados por las cosas en un determinado formato, por lo general tablas o documentos. Machine Learning : aplicaci\u00f3n alojada en la nube con el fin de generar los modelos que luego son utilizados por las aplicaciones de control. Aplicaciones de usuario : aplicaciones alojadas en la nube que permiten a los usuarios monitorizar el control de sus cosas conectadas. TCP/IP (Transmission Control Protcol/Internet Protocol) : Protocolo de enlace de datos que se usa en Internet para que los ordenadores y otros dispositivos env\u00eden y reciban datos. T\u00f3pico : Es la forma de identificar los datos que llegan al intermediario MQTT y saber a donde van dirigidos.","title":"1. Glosario"},{"location":"Bitacora/14-Semana%2013/","text":"14. Semana 13 16/10/2023 RETO Tanque de agua","title":"14. Semana 13"},{"location":"Bitacora/14-Semana%2013/#14-semana-13","text":"","title":"14. Semana 13"},{"location":"Bitacora/14-Semana%2013/#16102023","text":"","title":"16/10/2023"},{"location":"Bitacora/14-Semana%2013/#reto-tanque-de-agua","text":"","title":"RETO Tanque de agua"},{"location":"Bitacora/2-Semana%201/","text":"2. Semana 1 05/08/2023 \u00bfQu\u00e9 es el IoT? En la actualidad, se habla de la industria 4.0, que son las industrias que se apoyan en las tecnolog\u00edas actuales para optimizar sus procesos de producci\u00f3n. Su principio se basa en 4 tecnolog\u00edas: El internet de las cosas. Sistemas Ciberf\u00edsicos. Big Data. Inteligencia computacional. El Internet de las cosas es la base para las dem\u00e1s tecnolog\u00edas, inicialmente este termino fue usado para los sistemas electr\u00f3nicos que usaban la tecnolog\u00eda RFID; sin embargo, con el avance de la tecnolog\u00eda y el uso de IoT, mostr\u00f3 su gran importancia para sectores como transporte, manufactura, agr\u00edcola, entre otros. El Internet de las Cosas busca la interconexi\u00f3n de objetos de la vida cotidiana por medio de una red de comunicaci\u00f3n, como lo puede ser Internet. El Internet de las Cosas busca la interconexi\u00f3n de objetos de la vida cotidiana por medio de una red de comunicaci\u00f3n, como lo puede ser Internet. Su objetivo principal es la obtenci\u00f3n de informaci\u00f3n relevante de los objetos y ambientes en los que estos se encuentran por medio de sensores. Tambi\u00e9n env\u00eda informaci\u00f3n a trav\u00e9s de Internet, ya sea para almacenarla en la nube o para el an\u00e1lisis de informaci\u00f3n de manera r\u00e1pida, con el fin de tomar decisiones en tiempo real sobre procesos cr\u00edticos. Tomado de Freepik Ventajas del Internet de las Cosas (IoT): Conectividad permanente de objetos cotidianos a una red, capturando su informaci\u00f3n, lo que brinda la posibilidad de crear sistemas que funcionen en tiempo real y puedan operar de manera aut\u00f3noma para la toma de decisiones inteligentes. Permite generar alertas para uno o varios procesos que requieran intervenci\u00f3n humana. Involucra la participaci\u00f3n de diversos sectores de la industria en pos del bienestar y la mejora de la calidad de vida de las personas. Histora del IoT Eventos que han permitido o aportado en el desarrollo del paradigma de IoT: 1982 M\u00e1quina de Coca-Cola conectada con ARPNET. 1989 World Wide Web (WWW). 1990 Primera tostadora conectada a Internet. 1993 XCOFFEE, Cafetera que informa si hay cafe o no. 1994 WEARCAM, c\u00e1mara port\u00e1til conectada a internet 1998 Introducci\u00f3n al IPv6. 1999 Aparece el termino Internet de las Cosas (IoT): fue usado por primera vez por Kevin Ashton ejecutivo de Auto-ID labs en el MIT. 2000 Internet digital Dios, LG anuncia un refrigerador con conexi\u00f3n a internet. 2004 El termino IoT se hace popular. 2005 NABAZTAG, peque\u00f1o robot conectado a internet. 2008 Este a\u00f1o se considera que naci\u00f3 el IoT debido al auge de dispositivos conectados. 2009 St. Jude Medical e IoT, Adaptador USB inal\u00e1mbrico que recib\u00eda datos del implante cardiaco de un paciente. 2010 NEST COMPANY, compa\u00f1\u00eda de electrodom\u00e9sticos inteligentes. 2011 Gartner adiciona IoT al ciclo Hype 2014 Desarrollo de est\u00e1nderes industriales, Intel, Cisco, IBM, GE, AT&T, se unen para mejorar la integraci\u00f3n de IoT en la industria. 2015 Est\u00e1ndares globales en IoT. 2016 MIRAI, primer malware de IoT. 2017 Servicios de IoT. 2020 Ciclo Hype de IoT, se observa la madurez tecnol\u00f3gica de los subtemas de IoT y cu\u00e1les son los siguientes t\u00f3picos relevantes. 06/08/2023 Etapas de una soluci\u00f3n IoT Para facilitar la creaci\u00f3n de nuevas soluciones de IoT y seguir un orden l\u00f3gico en el proceso de construcci\u00f3n y dise\u00f1o, se proponen las siguientes etapas: Etapas antes de la comercializaci\u00f3n de IoT: Idea de implementaci\u00f3n : Evaluar la posibilidad de implementar una soluci\u00f3n IoT en tu empresa o en tus actividades diarias. Antes de comenzar, es importante preguntarse si ya existe una soluci\u00f3n similar y qu\u00e9 ventajas ofrece. Selecci\u00f3n de componentes y dispositivos intermedios : Considerar el rendimiento, consumo y precio de los componentes. El prototipo permitir\u00e1 obtener una primera aproximaci\u00f3n de la soluci\u00f3n. Dise\u00f1o de sistemas de comunicaciones : Integrar sistemas operativos que incluyan la capa de comunicaciones. La frecuencia, potencia y modo de operaci\u00f3n son aspectos clave a tener en cuenta. Establecer infraestructura de comunicaciones e informaci\u00f3n : Esencial para estandarizar y establecer la conectividad entre diferentes dispositivos y protocolos de comunicaci\u00f3n. Garantizar la seguridad de la aplicaci\u00f3n : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Implementar infraestructura y servicios en la nube : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Desarrollar aplicaciones para el an\u00e1lisis de datos : Utilizar software y herramientas que incluyan funciones de aprendizaje autom\u00e1tico y miner\u00eda de datos, lo cual es crucial para la toma de decisiones en IoT. Dise\u00f1ar una interfaz gr\u00e1fica para el usuario : Permitir el acceso a la informaci\u00f3n de manera c\u00f3moda y sencilla, fomentando la interacci\u00f3n entre el usuario y el dispositivo. Crear software de gesti\u00f3n para aplicaciones : Este software regula el funcionamiento del dispositivo, incluyendo algoritmos de proceso, comunicaci\u00f3n, sensorizaci\u00f3n, actuaci\u00f3n y consumo energ\u00e9tico. Seleccionar proveedores de servicios : Agregar valor a trav\u00e9s de la conectividad y desarrollar nuevos servicios y soluciones en diversos entornos industriales. Desarrollar productos y soluciones verticales : Generar nuevos conocimientos y oportunidades para monetizar los datos de los dispositivos conectados mediante soluciones que transformen las organizaciones para el futuro. Lecturas complementarias Texto sobre las diferencias entre el IoT y el IoT Industrial (IIoT). IIoT Arquitectura de dispositivos conectados a la nube. Cloud_Archicture 07/08/2023 Aplicaciones Industriales Para el entendimiento de las aplicaciones industriales, se realiz\u00f3 la lectura del texto 'El impacto de un nuevo paradigma tecnol\u00f3gico-social: el Internet de las cosas y la capacidad de innovaci\u00f3n. Dicho texto hace \u00e9nfasis en el impacto que ha venido teniendo el IoT, en c\u00f3mo cada vez hay m\u00e1s dispositivos conectados y c\u00f3mo ello llev\u00f3 a la aparici\u00f3n de m\u00e9todos como la web sem\u00e1ntica para que haya m\u00e1s capacidad de recibir datos y procesarlos, como lo hace el Big Data. Tambi\u00e9n habla de los tres grandes bloques que estableci\u00f3 el Working Party 29 (WP29), quienes son los encargados de la seguridad de datos. Estos tres grandes bloques ser\u00edan: Wearable Computing: Son dispositivos miniaturizados, de tal manera que se pueden llevar puestos y el cliente no los percibe. Por ejemplo, las gafas de Google (Google Glass), los smartwatches, entre otros. Dispositivos que registran informaci\u00f3n sobre la actividad de las personas, como lo es su estado de salud, actividad f\u00edsica, lugares visitados y con dicha informaci\u00f3n volcar los objetivos de venta, siempre y cuando dicha informaci\u00f3n no sea usada de forma incorrecta. Dom\u00f3tica: Por dom\u00f3tica se entiende el conjunto de tecnolog\u00edas aplicadas al control y automatizaci\u00f3n inteligente de la vivienda. Adem\u00e1s de lo anterior, se habl\u00f3 de un producto lanzado por la empresa telef\u00f3nica. Dicho producto se asemeja a unas piezas de Lego, las cuales se encajan entre s\u00ed, d\u00e1ndole as\u00ed al cliente la libertad de armar sus propios sensores y que estos cumplan funciones deseadas. El objetivo es que el usuario pueda 'automatizar' su casa a gusto. Tambi\u00e9n se habla de 'Telepizza', el cual es un bot\u00f3n que se coloca en la nevera mediante un im\u00e1n. Dicho bot\u00f3n est\u00e1 enlazado a la p\u00e1gina web de la pizzer\u00eda, donde el cliente crea su perfil, selecciona una pizza preferida y la vincula con el bot\u00f3n. De esta manera, el cliente solo necesitar\u00e1 pulsar el bot\u00f3n para que la pizza llegue a su casa, y la pizzer\u00eda tendr\u00eda un banco de informaci\u00f3n de sus clientes. Por todo lo anterior y aunque los productos puedan parecer simples, se le da gran importancia a la capacidad de innovaci\u00f3n que ha tra\u00eddo consigo el IoT, pues se ha producido una reconfiguraci\u00f3n del conocimiento en un entorno din\u00e1mico y cambiante como lo es la tecnolog\u00eda. Y es que Internet es un impulsor de negocios que cuenta con una gran variedad de productos. A trav\u00e9s de esta plataforma, en muchos casos se obtiene una comercializaci\u00f3n de \u00e9xito, ya que abarata los costes de apertura y mantenimiento, lo que permite que el negocio sea m\u00e1s rentable para el emprendedor. Aplicaciones Agr\u00edcolas Para el entendimiento de sus aplicaciones agr\u00edcolas, se hace uso de un paper desarrollado en la Universidad de C\u00f3rdoba, el cual habla de sistemas IoT para el cuidado y automatizaci\u00f3n de cultivos protegidos. En este proyecto ten\u00edan como motivaci\u00f3n encontrar nuevas y mejores maneras de producci\u00f3n agr\u00edcola. Promover nuevos procesos y m\u00e9todos m\u00e1s eficientes para el control de los cultivos, lograr mejor calidad y ahorrar insumos. Aprovechar los sistemas de control para desarrollar un sistema IoT que permita un mejor monitoreo de los cultivos y que recolecte datos en tiempo real para verificar su estado, al mismo tiempo que se toman decisiones o se llevan a cabo acciones. Se propuso entonces el siguiente proyecto con una arquitectura tipo Cliente-Servidor, que se compone de capas: Administraci\u00f3n y Procesamiento de Capturas (Datos) : Es responsable de recibir la informaci\u00f3n de cada sensor mediante el protocolo MQTT, el cual permite conexiones cableadas e inal\u00e1mbricas. Existe una administraci\u00f3n y procesamiento directo de datos por parte del servidor a trav\u00e9s de una interfaz de gesti\u00f3n que recibe la informaci\u00f3n transmitida en el sistema. Estos procesos est\u00e1n establecidos como capas subyacentes a los procesos principales. Interfaz de Servicios al Cliente : Es la encargada de recibir las peticiones del cliente en la web, que luego se env\u00edan a una capa subyacente encargada de la gesti\u00f3n y procesamiento de la petici\u00f3n. Tambi\u00e9n se muestra informaci\u00f3n al cliente mediante HTTP. Administraci\u00f3n y Gesti\u00f3n : Esta capa est\u00e1 a cargo de la suscripci\u00f3n al broker por un cliente MQTT como Paho. Recibe los datos y se conecta con la base de datos para su almacenamiento, dependiendo de la variable que se est\u00e9 administrando. Aqu\u00ed, cada dato se procesa en una cadena determinada. Recuperaci\u00f3n y Entrega de Informaci\u00f3n : Esta capa est\u00e1 dise\u00f1ada para recuperar y entregar informaci\u00f3n, dependiendo de las solicitudes y respuestas del usuario, as\u00ed como de los sensores. De la misma manera, cuenta con algoritmos de recuperaci\u00f3n de informaci\u00f3n para facilitar las consultas realizadas por los clientes. El procesamiento es manejado por la estaci\u00f3n, que es la parte del dispositivo encargada de la recolecci\u00f3n, procesamiento y env\u00edo de la informaci\u00f3n le\u00edda a trav\u00e9s de los diferentes sensores. Aplicaciones en Salud Para este sector, se utiliza un proyecto de investigaci\u00f3n de la Universidad del Rosario en compa\u00f1\u00eda de otras instituciones y el Hospital Universitario Mayor de M\u00e9ridi en Bogot\u00e1. Esto surge motivado por las estad\u00edsticas del Ministerio de Salud y Protecci\u00f3n Social, seg\u00fan las cuales existe un porcentaje del 19,4% de lesiones reportadas debido al mal manejo que las instituciones de salud dan a los medicamentos. La falta de control de variables como la temperatura y la humedad en el almacenamiento de los medicamentos est\u00e1 relacionada con la alteraci\u00f3n de las propiedades qu\u00edmicas de los productos farmac\u00e9uticos. El sistema implementado se bas\u00f3 en una arquitectura centralizada de IoT, que hace uso de protocolos MQTT (Message Queue Telemetry Transport) y HTTPS (Hypertext Transfer Protocol Secure). Estos protocolos permitieron la conexi\u00f3n de objetos a trav\u00e9s de Internet para transmitir informaci\u00f3n, con el prop\u00f3sito de lograr una comunicaci\u00f3n inteligente entre los objetos y el sistema central de informaci\u00f3n. La implementaci\u00f3n final del sistema de monitorizaci\u00f3n permiti\u00f3 obtener un registro continuo de las variables de temperatura y humedad, estableciendo alarmas din\u00e1micas con la finalidad de identificar y alertar al personal responsable sobre comportamientos no deseados en el equipo de refrigeraci\u00f3n. Esto logr\u00f3 optimizar el registro diario de temperatura y humedad, garantizando la trazabilidad del proceso. El proyecto plantea una soluci\u00f3n IoT que permita la supervisi\u00f3n y registro de las temperaturas y humedad de un equipo de refrigeraci\u00f3n. Dado que el dispositivo mantiene temperaturas entre 2 - 8 \u00b0C, se eligi\u00f3 el sensor SHT11 para controlar que la temperatura del dispositivo se mantuviera en este rango. Se implement\u00f3 un tipo de arquitectura centralizada: la funci\u00f3n del Broker es garantizar la calidad de los datos adquiridos antes de ser publicados en la nube. Este proceso permite que si existe un error en la lectura del sensor o se produce alguna p\u00e9rdida de datos, estos sean depurados y corregidos por el Broker antes de su posterior publicaci\u00f3n en la nube. El sensor se conecta a la tarjeta de desarrollo ESP8266, que se caracteriza por su conexi\u00f3n f\u00e1cil y segura v\u00eda WiFi. Los datos se leen cada 8 segundos y se env\u00edan mediante MQTT al broker local, donde est\u00e1 implementado un Raspberry Pi 3 (una computadora compacta). MySQL es un sistema de gesti\u00f3n de bases de datos. SSL es un certificado digital que autentica la identidad de un sitio web y habilita una conexi\u00f3n cifrada. API (Interfaz de Programaci\u00f3n de Aplicaciones) se puede considerar como un contrato de servicios entre dos aplicaciones. 08/08/2023 Arquitectura IoT Que es una arquitectura: Describe la interacci\u00f3n entre los componentes del sistema, por lo que permite representar de forma detallada los componentes de hardware, protocolos de comunicaci\u00f3n y la interacci\u00f3n segura y eficiente con el software que interact\u00faa con el cliente. A partir de lo expuesto, se presentan las arquitecturas y sus principales componentes para aplicaciones de Internet de las Cosas. Requerimientos de una arquitectura IoT: 1. Conectividad permanente : Dado que Internet de las Cosas (IoT) es una red de m\u00faltiples dispositivos conectados a internet, es indispensable mantener una conexi\u00f3n permanente entre dispositivos, adem\u00e1s de tener alternativas para el respaldo de informaci\u00f3n en los casos en que esta conexi\u00f3n presente fallos. Gesti\u00f3n de los datos : Debe llevar a cabo una gesti\u00f3n adecuada de los datos, permitiendo una recolecci\u00f3n eficiente de la informaci\u00f3n y estableciendo estrategias para el an\u00e1lisis autom\u00e1tico de dicha informaci\u00f3n. Por \u00faltimo, en una arquitectura de IoT se deben establecer procedimientos que posibiliten la toma de decisiones basadas en la recolecci\u00f3n y an\u00e1lisis de datos. Gesti\u00f3n de los dispositivos : Debe establecer estrategias para realizar configuraciones, actualizaciones, b\u00fasqueda y reporte de fallos de manera eficiente en todos los dispositivos interconectados. Escalabilidad : Debe permitir el registro, actualizaci\u00f3n y eliminaci\u00f3n de dispositivos de manera f\u00e1cil y r\u00e1pida. Igualmente, debe establecer estrategias de gesti\u00f3n de red que permitan el env\u00edo y registro de informaci\u00f3n sin p\u00e9rdidas considerables. Flexibilidad : Debe permitir la gesti\u00f3n de dispositivos sin importar el fabricante del dispositivo ni los protocolos de comunicaci\u00f3n utilizados. Por lo tanto, debe establecer procedimientos que le permitan adaptarse a los cambios tecnol\u00f3gicos y a nuevos protocolos existentes. Seguridad : La seguridad en una arquitectura de Internet de las Cosas (IoT) es fundamental, por lo que se deben establecer estrategias de gesti\u00f3n de red utilizando protocolos de transferencia de informaci\u00f3n r\u00e1pidos pero, al mismo tiempo, seguros. Cabe aclarar que, aunque el requerimiento de seguridad est\u00e9 al final, no significa que se pueda ignorar; al contrario, este componente de la arquitectura es una pieza clave en la actualidad, ya que son recurrentes los intentos de robo de informaci\u00f3n en una \u00e9poca en la que la informaci\u00f3n es el producto. Capas en una arquitectura de IoT: Se definen las interacciones entre el hardware del sistema IOT con los dispositivos de red, protocolos de comunicacion y el software de interaccion con el usuario. Aplicaci\u00f3n : En esta capa se encuentran las aplicaciones, generalmente interfaces, que se encargan de la interacci\u00f3n con el usuario final de la aplicaci\u00f3n. Red : En esta capa se encuentran los dispositivos de red que se encargan de gestionar todo el tr\u00e1fico de informaci\u00f3n a trav\u00e9s de la red mediante protocolos como HTTP, RESTful, MQTT, CoAP. Percepci\u00f3n : En esta capa se encuentran las cosas (Things), tambi\u00e9n llamadas entidades u objetos, que se encargan de la recolecci\u00f3n de informaci\u00f3n del entorno a trav\u00e9s de sensores y de la interacci\u00f3n con el mismo mediante actuadores. Dise\u00f1o de una soluci\u00f3n IoT: El dise\u00f1o de una soluci\u00f3n se compone de las siguientes 9 fases: Descripci\u00f3n del problema : \u00bfQu\u00e9 problema voy a solucionar? Alcance de la soluci\u00f3n Resultados esperados Nombre de la aplicaci\u00f3n Requerimientos : Son aquellas peticiones que realizan los clientes para el funcionamiento de su aplicaci\u00f3n. La abstracci\u00f3n del problema para su posterior implementaci\u00f3n. Entidades (Variables) : Nombre: debe ser \u00fanico. Tipo: num\u00e9rica, texto, booleana. Rango: finito, determinado por los sensores. Servicios (Funciones) : Son aquellas acciones que nuestro sistema IoT realiza constantemente. Por lo general, tienen retorno ya sea texto, num\u00e9rico o booleano. Se definen a partir de las abstracciones de los requerimientos iniciales. Eventos : Son lo que se ejecuta cuando alguna variable est\u00e1 fuera de sus par\u00e1metros establecidos. Por lo general, los par\u00e1metros est\u00e1n definidos por los rangos de las entidades. Estos pueden generar desde una alerta al usuario hasta el control de un actuador. Arquitectura : En la arquitectura centralizada, se posee una capa de depuraci\u00f3n. En la arquitectura distribuida, la depuraci\u00f3n se realiza en los sensores o en el servidor, no como una capa extra. Protocolos : HTTP CoAP MQTT Otros m\u00e1s Almacenamiento : Base de datos Relacionales (Maria DB) Base de datos no relacionales (Firebase) Interfaz : Se define la manera en que se entregar\u00e1 la informaci\u00f3n y las soluciones. Normalmente, mediante gr\u00e1ficos.","title":"2. Semana 1"},{"location":"Bitacora/2-Semana%201/#2-semana-1","text":"","title":"2. Semana 1"},{"location":"Bitacora/2-Semana%201/#05082023","text":"","title":"05/08/2023"},{"location":"Bitacora/2-Semana%201/#que-es-el-iot","text":"En la actualidad, se habla de la industria 4.0, que son las industrias que se apoyan en las tecnolog\u00edas actuales para optimizar sus procesos de producci\u00f3n. Su principio se basa en 4 tecnolog\u00edas: El internet de las cosas. Sistemas Ciberf\u00edsicos. Big Data. Inteligencia computacional. El Internet de las cosas es la base para las dem\u00e1s tecnolog\u00edas, inicialmente este termino fue usado para los sistemas electr\u00f3nicos que usaban la tecnolog\u00eda RFID; sin embargo, con el avance de la tecnolog\u00eda y el uso de IoT, mostr\u00f3 su gran importancia para sectores como transporte, manufactura, agr\u00edcola, entre otros. El Internet de las Cosas busca la interconexi\u00f3n de objetos de la vida cotidiana por medio de una red de comunicaci\u00f3n, como lo puede ser Internet. El Internet de las Cosas busca la interconexi\u00f3n de objetos de la vida cotidiana por medio de una red de comunicaci\u00f3n, como lo puede ser Internet. Su objetivo principal es la obtenci\u00f3n de informaci\u00f3n relevante de los objetos y ambientes en los que estos se encuentran por medio de sensores. Tambi\u00e9n env\u00eda informaci\u00f3n a trav\u00e9s de Internet, ya sea para almacenarla en la nube o para el an\u00e1lisis de informaci\u00f3n de manera r\u00e1pida, con el fin de tomar decisiones en tiempo real sobre procesos cr\u00edticos. Tomado de Freepik Ventajas del Internet de las Cosas (IoT): Conectividad permanente de objetos cotidianos a una red, capturando su informaci\u00f3n, lo que brinda la posibilidad de crear sistemas que funcionen en tiempo real y puedan operar de manera aut\u00f3noma para la toma de decisiones inteligentes. Permite generar alertas para uno o varios procesos que requieran intervenci\u00f3n humana. Involucra la participaci\u00f3n de diversos sectores de la industria en pos del bienestar y la mejora de la calidad de vida de las personas.","title":"\u00bfQu\u00e9 es el IoT?"},{"location":"Bitacora/2-Semana%201/#histora-del-iot","text":"Eventos que han permitido o aportado en el desarrollo del paradigma de IoT: 1982 M\u00e1quina de Coca-Cola conectada con ARPNET. 1989 World Wide Web (WWW). 1990 Primera tostadora conectada a Internet. 1993 XCOFFEE, Cafetera que informa si hay cafe o no. 1994 WEARCAM, c\u00e1mara port\u00e1til conectada a internet 1998 Introducci\u00f3n al IPv6. 1999 Aparece el termino Internet de las Cosas (IoT): fue usado por primera vez por Kevin Ashton ejecutivo de Auto-ID labs en el MIT. 2000 Internet digital Dios, LG anuncia un refrigerador con conexi\u00f3n a internet. 2004 El termino IoT se hace popular. 2005 NABAZTAG, peque\u00f1o robot conectado a internet. 2008 Este a\u00f1o se considera que naci\u00f3 el IoT debido al auge de dispositivos conectados. 2009 St. Jude Medical e IoT, Adaptador USB inal\u00e1mbrico que recib\u00eda datos del implante cardiaco de un paciente. 2010 NEST COMPANY, compa\u00f1\u00eda de electrodom\u00e9sticos inteligentes. 2011 Gartner adiciona IoT al ciclo Hype 2014 Desarrollo de est\u00e1nderes industriales, Intel, Cisco, IBM, GE, AT&T, se unen para mejorar la integraci\u00f3n de IoT en la industria. 2015 Est\u00e1ndares globales en IoT. 2016 MIRAI, primer malware de IoT. 2017 Servicios de IoT. 2020 Ciclo Hype de IoT, se observa la madurez tecnol\u00f3gica de los subtemas de IoT y cu\u00e1les son los siguientes t\u00f3picos relevantes.","title":"Histora del IoT"},{"location":"Bitacora/2-Semana%201/#06082023","text":"","title":"06/08/2023"},{"location":"Bitacora/2-Semana%201/#etapas-de-una-solucion-iot","text":"Para facilitar la creaci\u00f3n de nuevas soluciones de IoT y seguir un orden l\u00f3gico en el proceso de construcci\u00f3n y dise\u00f1o, se proponen las siguientes etapas: Etapas antes de la comercializaci\u00f3n de IoT: Idea de implementaci\u00f3n : Evaluar la posibilidad de implementar una soluci\u00f3n IoT en tu empresa o en tus actividades diarias. Antes de comenzar, es importante preguntarse si ya existe una soluci\u00f3n similar y qu\u00e9 ventajas ofrece. Selecci\u00f3n de componentes y dispositivos intermedios : Considerar el rendimiento, consumo y precio de los componentes. El prototipo permitir\u00e1 obtener una primera aproximaci\u00f3n de la soluci\u00f3n. Dise\u00f1o de sistemas de comunicaciones : Integrar sistemas operativos que incluyan la capa de comunicaciones. La frecuencia, potencia y modo de operaci\u00f3n son aspectos clave a tener en cuenta. Establecer infraestructura de comunicaciones e informaci\u00f3n : Esencial para estandarizar y establecer la conectividad entre diferentes dispositivos y protocolos de comunicaci\u00f3n. Garantizar la seguridad de la aplicaci\u00f3n : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Implementar infraestructura y servicios en la nube : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Desarrollar aplicaciones para el an\u00e1lisis de datos : Utilizar software y herramientas que incluyan funciones de aprendizaje autom\u00e1tico y miner\u00eda de datos, lo cual es crucial para la toma de decisiones en IoT. Dise\u00f1ar una interfaz gr\u00e1fica para el usuario : Permitir el acceso a la informaci\u00f3n de manera c\u00f3moda y sencilla, fomentando la interacci\u00f3n entre el usuario y el dispositivo. Crear software de gesti\u00f3n para aplicaciones : Este software regula el funcionamiento del dispositivo, incluyendo algoritmos de proceso, comunicaci\u00f3n, sensorizaci\u00f3n, actuaci\u00f3n y consumo energ\u00e9tico. Seleccionar proveedores de servicios : Agregar valor a trav\u00e9s de la conectividad y desarrollar nuevos servicios y soluciones en diversos entornos industriales. Desarrollar productos y soluciones verticales : Generar nuevos conocimientos y oportunidades para monetizar los datos de los dispositivos conectados mediante soluciones que transformen las organizaciones para el futuro.","title":"Etapas de una soluci\u00f3n IoT"},{"location":"Bitacora/2-Semana%201/#lecturas-complementarias","text":"Texto sobre las diferencias entre el IoT y el IoT Industrial (IIoT). IIoT Arquitectura de dispositivos conectados a la nube. Cloud_Archicture","title":"Lecturas complementarias"},{"location":"Bitacora/2-Semana%201/#07082023","text":"","title":"07/08/2023"},{"location":"Bitacora/2-Semana%201/#aplicaciones-industriales","text":"Para el entendimiento de las aplicaciones industriales, se realiz\u00f3 la lectura del texto 'El impacto de un nuevo paradigma tecnol\u00f3gico-social: el Internet de las cosas y la capacidad de innovaci\u00f3n. Dicho texto hace \u00e9nfasis en el impacto que ha venido teniendo el IoT, en c\u00f3mo cada vez hay m\u00e1s dispositivos conectados y c\u00f3mo ello llev\u00f3 a la aparici\u00f3n de m\u00e9todos como la web sem\u00e1ntica para que haya m\u00e1s capacidad de recibir datos y procesarlos, como lo hace el Big Data. Tambi\u00e9n habla de los tres grandes bloques que estableci\u00f3 el Working Party 29 (WP29), quienes son los encargados de la seguridad de datos. Estos tres grandes bloques ser\u00edan: Wearable Computing: Son dispositivos miniaturizados, de tal manera que se pueden llevar puestos y el cliente no los percibe. Por ejemplo, las gafas de Google (Google Glass), los smartwatches, entre otros. Dispositivos que registran informaci\u00f3n sobre la actividad de las personas, como lo es su estado de salud, actividad f\u00edsica, lugares visitados y con dicha informaci\u00f3n volcar los objetivos de venta, siempre y cuando dicha informaci\u00f3n no sea usada de forma incorrecta. Dom\u00f3tica: Por dom\u00f3tica se entiende el conjunto de tecnolog\u00edas aplicadas al control y automatizaci\u00f3n inteligente de la vivienda. Adem\u00e1s de lo anterior, se habl\u00f3 de un producto lanzado por la empresa telef\u00f3nica. Dicho producto se asemeja a unas piezas de Lego, las cuales se encajan entre s\u00ed, d\u00e1ndole as\u00ed al cliente la libertad de armar sus propios sensores y que estos cumplan funciones deseadas. El objetivo es que el usuario pueda 'automatizar' su casa a gusto. Tambi\u00e9n se habla de 'Telepizza', el cual es un bot\u00f3n que se coloca en la nevera mediante un im\u00e1n. Dicho bot\u00f3n est\u00e1 enlazado a la p\u00e1gina web de la pizzer\u00eda, donde el cliente crea su perfil, selecciona una pizza preferida y la vincula con el bot\u00f3n. De esta manera, el cliente solo necesitar\u00e1 pulsar el bot\u00f3n para que la pizza llegue a su casa, y la pizzer\u00eda tendr\u00eda un banco de informaci\u00f3n de sus clientes. Por todo lo anterior y aunque los productos puedan parecer simples, se le da gran importancia a la capacidad de innovaci\u00f3n que ha tra\u00eddo consigo el IoT, pues se ha producido una reconfiguraci\u00f3n del conocimiento en un entorno din\u00e1mico y cambiante como lo es la tecnolog\u00eda. Y es que Internet es un impulsor de negocios que cuenta con una gran variedad de productos. A trav\u00e9s de esta plataforma, en muchos casos se obtiene una comercializaci\u00f3n de \u00e9xito, ya que abarata los costes de apertura y mantenimiento, lo que permite que el negocio sea m\u00e1s rentable para el emprendedor.","title":"Aplicaciones Industriales"},{"location":"Bitacora/2-Semana%201/#aplicaciones-agricolas","text":"Para el entendimiento de sus aplicaciones agr\u00edcolas, se hace uso de un paper desarrollado en la Universidad de C\u00f3rdoba, el cual habla de sistemas IoT para el cuidado y automatizaci\u00f3n de cultivos protegidos. En este proyecto ten\u00edan como motivaci\u00f3n encontrar nuevas y mejores maneras de producci\u00f3n agr\u00edcola. Promover nuevos procesos y m\u00e9todos m\u00e1s eficientes para el control de los cultivos, lograr mejor calidad y ahorrar insumos. Aprovechar los sistemas de control para desarrollar un sistema IoT que permita un mejor monitoreo de los cultivos y que recolecte datos en tiempo real para verificar su estado, al mismo tiempo que se toman decisiones o se llevan a cabo acciones. Se propuso entonces el siguiente proyecto con una arquitectura tipo Cliente-Servidor, que se compone de capas: Administraci\u00f3n y Procesamiento de Capturas (Datos) : Es responsable de recibir la informaci\u00f3n de cada sensor mediante el protocolo MQTT, el cual permite conexiones cableadas e inal\u00e1mbricas. Existe una administraci\u00f3n y procesamiento directo de datos por parte del servidor a trav\u00e9s de una interfaz de gesti\u00f3n que recibe la informaci\u00f3n transmitida en el sistema. Estos procesos est\u00e1n establecidos como capas subyacentes a los procesos principales. Interfaz de Servicios al Cliente : Es la encargada de recibir las peticiones del cliente en la web, que luego se env\u00edan a una capa subyacente encargada de la gesti\u00f3n y procesamiento de la petici\u00f3n. Tambi\u00e9n se muestra informaci\u00f3n al cliente mediante HTTP. Administraci\u00f3n y Gesti\u00f3n : Esta capa est\u00e1 a cargo de la suscripci\u00f3n al broker por un cliente MQTT como Paho. Recibe los datos y se conecta con la base de datos para su almacenamiento, dependiendo de la variable que se est\u00e9 administrando. Aqu\u00ed, cada dato se procesa en una cadena determinada. Recuperaci\u00f3n y Entrega de Informaci\u00f3n : Esta capa est\u00e1 dise\u00f1ada para recuperar y entregar informaci\u00f3n, dependiendo de las solicitudes y respuestas del usuario, as\u00ed como de los sensores. De la misma manera, cuenta con algoritmos de recuperaci\u00f3n de informaci\u00f3n para facilitar las consultas realizadas por los clientes. El procesamiento es manejado por la estaci\u00f3n, que es la parte del dispositivo encargada de la recolecci\u00f3n, procesamiento y env\u00edo de la informaci\u00f3n le\u00edda a trav\u00e9s de los diferentes sensores.","title":"Aplicaciones Agr\u00edcolas"},{"location":"Bitacora/2-Semana%201/#aplicaciones-en-salud","text":"Para este sector, se utiliza un proyecto de investigaci\u00f3n de la Universidad del Rosario en compa\u00f1\u00eda de otras instituciones y el Hospital Universitario Mayor de M\u00e9ridi en Bogot\u00e1. Esto surge motivado por las estad\u00edsticas del Ministerio de Salud y Protecci\u00f3n Social, seg\u00fan las cuales existe un porcentaje del 19,4% de lesiones reportadas debido al mal manejo que las instituciones de salud dan a los medicamentos. La falta de control de variables como la temperatura y la humedad en el almacenamiento de los medicamentos est\u00e1 relacionada con la alteraci\u00f3n de las propiedades qu\u00edmicas de los productos farmac\u00e9uticos. El sistema implementado se bas\u00f3 en una arquitectura centralizada de IoT, que hace uso de protocolos MQTT (Message Queue Telemetry Transport) y HTTPS (Hypertext Transfer Protocol Secure). Estos protocolos permitieron la conexi\u00f3n de objetos a trav\u00e9s de Internet para transmitir informaci\u00f3n, con el prop\u00f3sito de lograr una comunicaci\u00f3n inteligente entre los objetos y el sistema central de informaci\u00f3n. La implementaci\u00f3n final del sistema de monitorizaci\u00f3n permiti\u00f3 obtener un registro continuo de las variables de temperatura y humedad, estableciendo alarmas din\u00e1micas con la finalidad de identificar y alertar al personal responsable sobre comportamientos no deseados en el equipo de refrigeraci\u00f3n. Esto logr\u00f3 optimizar el registro diario de temperatura y humedad, garantizando la trazabilidad del proceso. El proyecto plantea una soluci\u00f3n IoT que permita la supervisi\u00f3n y registro de las temperaturas y humedad de un equipo de refrigeraci\u00f3n. Dado que el dispositivo mantiene temperaturas entre 2 - 8 \u00b0C, se eligi\u00f3 el sensor SHT11 para controlar que la temperatura del dispositivo se mantuviera en este rango. Se implement\u00f3 un tipo de arquitectura centralizada: la funci\u00f3n del Broker es garantizar la calidad de los datos adquiridos antes de ser publicados en la nube. Este proceso permite que si existe un error en la lectura del sensor o se produce alguna p\u00e9rdida de datos, estos sean depurados y corregidos por el Broker antes de su posterior publicaci\u00f3n en la nube. El sensor se conecta a la tarjeta de desarrollo ESP8266, que se caracteriza por su conexi\u00f3n f\u00e1cil y segura v\u00eda WiFi. Los datos se leen cada 8 segundos y se env\u00edan mediante MQTT al broker local, donde est\u00e1 implementado un Raspberry Pi 3 (una computadora compacta). MySQL es un sistema de gesti\u00f3n de bases de datos. SSL es un certificado digital que autentica la identidad de un sitio web y habilita una conexi\u00f3n cifrada. API (Interfaz de Programaci\u00f3n de Aplicaciones) se puede considerar como un contrato de servicios entre dos aplicaciones.","title":"Aplicaciones en Salud"},{"location":"Bitacora/2-Semana%201/#08082023","text":"","title":"08/08/2023"},{"location":"Bitacora/2-Semana%201/#arquitectura-iot","text":"","title":"Arquitectura IoT"},{"location":"Bitacora/2-Semana%201/#que-es-una-arquitectura","text":"Describe la interacci\u00f3n entre los componentes del sistema, por lo que permite representar de forma detallada los componentes de hardware, protocolos de comunicaci\u00f3n y la interacci\u00f3n segura y eficiente con el software que interact\u00faa con el cliente. A partir de lo expuesto, se presentan las arquitecturas y sus principales componentes para aplicaciones de Internet de las Cosas. Requerimientos de una arquitectura IoT: 1. Conectividad permanente : Dado que Internet de las Cosas (IoT) es una red de m\u00faltiples dispositivos conectados a internet, es indispensable mantener una conexi\u00f3n permanente entre dispositivos, adem\u00e1s de tener alternativas para el respaldo de informaci\u00f3n en los casos en que esta conexi\u00f3n presente fallos. Gesti\u00f3n de los datos : Debe llevar a cabo una gesti\u00f3n adecuada de los datos, permitiendo una recolecci\u00f3n eficiente de la informaci\u00f3n y estableciendo estrategias para el an\u00e1lisis autom\u00e1tico de dicha informaci\u00f3n. Por \u00faltimo, en una arquitectura de IoT se deben establecer procedimientos que posibiliten la toma de decisiones basadas en la recolecci\u00f3n y an\u00e1lisis de datos. Gesti\u00f3n de los dispositivos : Debe establecer estrategias para realizar configuraciones, actualizaciones, b\u00fasqueda y reporte de fallos de manera eficiente en todos los dispositivos interconectados. Escalabilidad : Debe permitir el registro, actualizaci\u00f3n y eliminaci\u00f3n de dispositivos de manera f\u00e1cil y r\u00e1pida. Igualmente, debe establecer estrategias de gesti\u00f3n de red que permitan el env\u00edo y registro de informaci\u00f3n sin p\u00e9rdidas considerables. Flexibilidad : Debe permitir la gesti\u00f3n de dispositivos sin importar el fabricante del dispositivo ni los protocolos de comunicaci\u00f3n utilizados. Por lo tanto, debe establecer procedimientos que le permitan adaptarse a los cambios tecnol\u00f3gicos y a nuevos protocolos existentes. Seguridad : La seguridad en una arquitectura de Internet de las Cosas (IoT) es fundamental, por lo que se deben establecer estrategias de gesti\u00f3n de red utilizando protocolos de transferencia de informaci\u00f3n r\u00e1pidos pero, al mismo tiempo, seguros. Cabe aclarar que, aunque el requerimiento de seguridad est\u00e9 al final, no significa que se pueda ignorar; al contrario, este componente de la arquitectura es una pieza clave en la actualidad, ya que son recurrentes los intentos de robo de informaci\u00f3n en una \u00e9poca en la que la informaci\u00f3n es el producto.","title":"Que es una arquitectura:"},{"location":"Bitacora/2-Semana%201/#capas-en-una-arquitectura-de-iot","text":"Se definen las interacciones entre el hardware del sistema IOT con los dispositivos de red, protocolos de comunicacion y el software de interaccion con el usuario. Aplicaci\u00f3n : En esta capa se encuentran las aplicaciones, generalmente interfaces, que se encargan de la interacci\u00f3n con el usuario final de la aplicaci\u00f3n. Red : En esta capa se encuentran los dispositivos de red que se encargan de gestionar todo el tr\u00e1fico de informaci\u00f3n a trav\u00e9s de la red mediante protocolos como HTTP, RESTful, MQTT, CoAP. Percepci\u00f3n : En esta capa se encuentran las cosas (Things), tambi\u00e9n llamadas entidades u objetos, que se encargan de la recolecci\u00f3n de informaci\u00f3n del entorno a trav\u00e9s de sensores y de la interacci\u00f3n con el mismo mediante actuadores.","title":"Capas en una arquitectura de IoT:"},{"location":"Bitacora/2-Semana%201/#diseno-de-una-solucion-iot","text":"El dise\u00f1o de una soluci\u00f3n se compone de las siguientes 9 fases: Descripci\u00f3n del problema : \u00bfQu\u00e9 problema voy a solucionar? Alcance de la soluci\u00f3n Resultados esperados Nombre de la aplicaci\u00f3n Requerimientos : Son aquellas peticiones que realizan los clientes para el funcionamiento de su aplicaci\u00f3n. La abstracci\u00f3n del problema para su posterior implementaci\u00f3n. Entidades (Variables) : Nombre: debe ser \u00fanico. Tipo: num\u00e9rica, texto, booleana. Rango: finito, determinado por los sensores. Servicios (Funciones) : Son aquellas acciones que nuestro sistema IoT realiza constantemente. Por lo general, tienen retorno ya sea texto, num\u00e9rico o booleano. Se definen a partir de las abstracciones de los requerimientos iniciales. Eventos : Son lo que se ejecuta cuando alguna variable est\u00e1 fuera de sus par\u00e1metros establecidos. Por lo general, los par\u00e1metros est\u00e1n definidos por los rangos de las entidades. Estos pueden generar desde una alerta al usuario hasta el control de un actuador. Arquitectura : En la arquitectura centralizada, se posee una capa de depuraci\u00f3n. En la arquitectura distribuida, la depuraci\u00f3n se realiza en los sensores o en el servidor, no como una capa extra. Protocolos : HTTP CoAP MQTT Otros m\u00e1s Almacenamiento : Base de datos Relacionales (Maria DB) Base de datos no relacionales (Firebase) Interfaz : Se define la manera en que se entregar\u00e1 la informaci\u00f3n y las soluciones. Normalmente, mediante gr\u00e1ficos.","title":"Dise\u00f1o de una soluci\u00f3n IoT:"},{"location":"Bitacora/3-Semana%202/","text":"3. Semana 2 09/08/2023 HardWare para IoT \u00bfQu\u00e9 herramientas se usan en el IoT? Sensores Actuadores Tarjetas de desarrollo, las cuales a su vez contienen microcontroladores y microprocesadores. Esto permite el control de sensores y actuadores mediante programaci\u00f3n. Gesti\u00f3n de la conectividad mediante protocolos estandarizados como MQTT y HTTP, para asegurar que la informaci\u00f3n llegue a la nube de manera segura. Interfaz gr\u00e1fica: comunica al usuario final la informaci\u00f3n entre los dispositivos (cosas) y la nube. Para ello, se utilizan aplicaciones de desarrollo alojadas en la nube. Para entender estos componentes, inicialmente se hizo uso de Tinkercad, donde se permite simular tarjetas Arduino UNO, para as\u00ed explicar un poco de la programaci\u00f3n de estas y el entendimiento entre sensores digitales y anal\u00f3gicos. Ejercicios Tinkercad Tinkercad Ejercicio 1. Encender dos LED alternandolos: Crear un sketch de un circuito . Arrastrar al WorkSpace un Arduino, dos LED y dos resistencias. Conectar cada uno de los LED asign\u00e1ndole a cada uno un pin en el Arduino y la otra parte a una resistencia. Conectar la resistencia al Ground del Arduino. Deber\u00eda verse: Con el montaje listo, ir al sector de c\u00f3digo y cambiarlo de Bloques a Texto . En el Setup , usando la funci\u00f3n pinMode , asignarle a los LED el pin en el cual est\u00e1n conectados. (Incluir el LED propio del Arduino, LED_BUILTIN ). En el Loop , usando la funci\u00f3n digitalWrite , encendemos o apagamos los LED y con delay agregamos un tiempo entre los pasos que va ejecutando Arduino. De esta forma, programamos un c\u00f3digo que enciende un LED durante un segundo (1 seg), lo apaga, espera un segundo (1 seg), enciende el siguiente LED durante medio segundo (0.5 seg), lo apaga, espera otro medio segundo y finalmente enciende el LED restante durante un segundo y medio (1.5 seg), lo apaga y permanece apagado todo por otro segundo y medio (1.5 seg). Nota : Recuerda que el delay se mide en milisegundos (1/1000 seg), por lo que un segundo ser\u00eda delay(1000); . Correr la simulaci\u00f3n.","title":"3. Semana 2"},{"location":"Bitacora/3-Semana%202/#3-semana-2","text":"","title":"3. Semana 2"},{"location":"Bitacora/3-Semana%202/#09082023","text":"","title":"09/08/2023"},{"location":"Bitacora/3-Semana%202/#hardware-para-iot","text":"","title":"HardWare para IoT"},{"location":"Bitacora/3-Semana%202/#que-herramientas-se-usan-en-el-iot","text":"Sensores Actuadores Tarjetas de desarrollo, las cuales a su vez contienen microcontroladores y microprocesadores. Esto permite el control de sensores y actuadores mediante programaci\u00f3n. Gesti\u00f3n de la conectividad mediante protocolos estandarizados como MQTT y HTTP, para asegurar que la informaci\u00f3n llegue a la nube de manera segura. Interfaz gr\u00e1fica: comunica al usuario final la informaci\u00f3n entre los dispositivos (cosas) y la nube. Para ello, se utilizan aplicaciones de desarrollo alojadas en la nube. Para entender estos componentes, inicialmente se hizo uso de Tinkercad, donde se permite simular tarjetas Arduino UNO, para as\u00ed explicar un poco de la programaci\u00f3n de estas y el entendimiento entre sensores digitales y anal\u00f3gicos.","title":"\u00bfQu\u00e9 herramientas se usan en el IoT?"},{"location":"Bitacora/3-Semana%202/#ejercicios-tinkercad","text":"Tinkercad","title":"Ejercicios Tinkercad"},{"location":"Bitacora/3-Semana%202/#ejercicio-1","text":"Encender dos LED alternandolos: Crear un sketch de un circuito . Arrastrar al WorkSpace un Arduino, dos LED y dos resistencias. Conectar cada uno de los LED asign\u00e1ndole a cada uno un pin en el Arduino y la otra parte a una resistencia. Conectar la resistencia al Ground del Arduino. Deber\u00eda verse: Con el montaje listo, ir al sector de c\u00f3digo y cambiarlo de Bloques a Texto . En el Setup , usando la funci\u00f3n pinMode , asignarle a los LED el pin en el cual est\u00e1n conectados. (Incluir el LED propio del Arduino, LED_BUILTIN ). En el Loop , usando la funci\u00f3n digitalWrite , encendemos o apagamos los LED y con delay agregamos un tiempo entre los pasos que va ejecutando Arduino. De esta forma, programamos un c\u00f3digo que enciende un LED durante un segundo (1 seg), lo apaga, espera un segundo (1 seg), enciende el siguiente LED durante medio segundo (0.5 seg), lo apaga, espera otro medio segundo y finalmente enciende el LED restante durante un segundo y medio (1.5 seg), lo apaga y permanece apagado todo por otro segundo y medio (1.5 seg). Nota : Recuerda que el delay se mide en milisegundos (1/1000 seg), por lo que un segundo ser\u00eda delay(1000); . Correr la simulaci\u00f3n.","title":"Ejercicio 1."},{"location":"Bitacora/4-Semana%203/","text":"","title":"4 Semana 3"},{"location":"Bitacora/5-Semana%204/","text":"5. Referencias Incluimos las referencias. Incluimos al menos un v\u00eddeo que describa el proceso productivo.","title":"5. Referencias"},{"location":"Bitacora/5-Semana%204/#5-referencias","text":"Incluimos las referencias. Incluimos al menos un v\u00eddeo que describa el proceso productivo.","title":"5. Referencias"},{"location":"Bitacora/6-Semana%205/","text":"6. Anexos Incluimos los datos t\u00e9cnicos de los sensores, actuadores, PLC y sistemas de adquisici\u00f3n a utilizar. No incluimos capturas de pantalla de los datos t\u00e9cnicos.","title":"6. Anexos"},{"location":"Bitacora/6-Semana%205/#6-anexos","text":"Incluimos los datos t\u00e9cnicos de los sensores, actuadores, PLC y sistemas de adquisici\u00f3n a utilizar. No incluimos capturas de pantalla de los datos t\u00e9cnicos.","title":"6. Anexos"},{"location":"Bitacora/7-%20Semana%206/","text":"4. Conclusiones Concluimos, resumiendo el informe. Presentamos resultados.","title":"4. Conclusiones"},{"location":"Bitacora/7-%20Semana%206/#4-conclusiones","text":"Concluimos, resumiendo el informe. Presentamos resultados.","title":"4. Conclusiones"},{"location":"Bitacora/8-%20Semana%207/","text":"3. Instrumentaci\u00f3n Incluimos en un diagrama tipo SCADA los sensores y actuadores. Informamos por cada bloque en el diagrama de flujo de materia el n\u00famero de actuadores y sensores. Se\u00f1alamos los actuadores y sensores que presentan se\u00f1ales continuas y necesitan de sistemas de adquisici\u00f3n como DAC y ADC. Utilizamos gr\u00e1ficos como barras, torta, etc. para mostrar la cantidad y los tipos de actuadores, sensores y sistemas de adquisici\u00f3n que usamos en la empresa.","title":"3. Instrumentaci\u00f3n"},{"location":"Bitacora/8-%20Semana%207/#3-instrumentacion","text":"Incluimos en un diagrama tipo SCADA los sensores y actuadores. Informamos por cada bloque en el diagrama de flujo de materia el n\u00famero de actuadores y sensores. Se\u00f1alamos los actuadores y sensores que presentan se\u00f1ales continuas y necesitan de sistemas de adquisici\u00f3n como DAC y ADC. Utilizamos gr\u00e1ficos como barras, torta, etc. para mostrar la cantidad y los tipos de actuadores, sensores y sistemas de adquisici\u00f3n que usamos en la empresa.","title":"3. Instrumentaci\u00f3n"},{"location":"Clases/clase%201/","text":"Clase 1 TI IOT En la actualidad se habla de la industria 4.0 , que son las industrias que se apoyan de las tecnolog\u00edas actuales para optimizar sus procesos de producci\u00f3n. Esta industria basa sus principios en 4 tecnolog\u00edas: El internet de las cosas (IOT) Sistemas Ciberf\u00edsicos Big Data Inteligencia computacional \u00bf Que viene a tu mente cuando escuchas Internet de las cosas (IOT) ? El internet de las cosas es la basa para las dem\u00e1s tecnolog\u00edas. Anteriormente este termino se usaba solo en las tecnolog\u00edas que usaban Identificaci\u00f3n por Radiofrecuencia (RFID, por sus siglas en ingles), sin embargo, con el avance de la tecnolog\u00eda el uso de IOT mostro su gran importancia para sectores como transporte, manufactura, agr\u00edcola, entre otros. El internet de las cosas busca la interconexi\u00f3n de objetos de la vida cotidiana por medio de una red de comunicaci\u00f3n como lo puede ser el internet. Donde su objetivo principal es la obtenci\u00f3n de informaci\u00f3n relevante de los objetos, ambientes, en el que estos se encuentran por medio de sensores. Tambi\u00e9n env\u00edan informaci\u00f3n a trav\u00e9s de internet ya sea para almacenarla en la nube o el an\u00e1lisis de informaci\u00f3n de manera r\u00e1pida para la toma de decisiones en tiempo real sobre procesos cr\u00edticos. En otras palabras, el internet de las cosas es una red gigante de cosas (dispositivos) y personas conectadas que recopilan, comparten datos y toman decisiones a partir de estos. El concepto de cosas incluye innumerables aparatos, como sensores, luces inteligentes en el hogar, pulseras que monitorizan la salud, piezas de sistemas de seguridad (c\u00e1maras, etc.) y componentes relacionados con la conducci\u00f3n autom\u00e1tica; todos ellos conectados a internet y otros protocolos de comunicaci\u00f3n que m\u00e1s adelante ser\u00e1n explicados. El IOT suele estar muy automatizado o mejorado con software inteligente, por lo que requiere poca interacci\u00f3n entre personas y m\u00e1quinas, y a veces ninguna. Las ventajas que tiene el IOT son: Conectividad permanente de objetos cotidianos a una red, capturando la informaci\u00f3n de estos, teniendo as\u00ed la posibilidad de crear sistemas que funcionen en tiempo real y que pueden ser aut\u00f3nomos para la toma de decisiones inteligentes. Permite generar alertas de uno o varios procesos que necesiten la intervenci\u00f3n humana Intervenci\u00f3n de diferentes sectores de la industria para el bienestar y mejoramiento de la calidad de vida de las personas Historia del IOT 1982 M\u00e1quina de Coca-Cola conectada con ARPNET. 1989 World Wide Web (WWW). 1990 Primera tostadora conectada a Internet. 1993 XCOFFEE, Cafetera que informa si hay cafe o no. 1994 WEARCAM, c\u00e1mara port\u00e1til conectada a internet 1998 Introducci\u00f3n al IPv6. 1999 Aparece el termino Internet de las Cosas (IoT): fue usado por primera vez por Kevin Ashton ejecutivo de Auto-ID labs en el MIT. 2000 Internet digital Dios, LG anuncia un refrigerador con conexi\u00f3n a internet. 2004 El termino IoT se hace popular. 2005 NABAZTAG, peque\u00f1o robot conectado a internet. 2008 Este a\u00f1o se considera que naci\u00f3 el IoT debido al auge de dispositivos conectados. 2009 St. Jude Medical e IoT, Adaptador USB inal\u00e1mbrico que recib\u00eda datos del implante cardiaco de un paciente. 2010 NEST COMPANY, compa\u00f1\u00eda de electrodom\u00e9sticos inteligentes. 2011 Gartner adiciona IoT al ciclo Hype 2014 Desarrollo de est\u00e1nderes industriales, Intel, Cisco, IBM, GE, AT&T, se unen para mejorar la integraci\u00f3n de IoT en la industria. 2015 Est\u00e1ndares globales en IoT. 2016 MIRAI, primer malware de IoT. 2017 Servicios de IoT. 2020 Ciclo Hype de IoT, se observa la madurez tecnol\u00f3gica de los subtemas de IoT y cu\u00e1les son los siguientes t\u00f3picos relevantes. Etapas de una soluci\u00f3n IoT Para facilitar la creaci\u00f3n de nuevas soluciones de IoT y seguir un orden l\u00f3gico en el proceso de construcci\u00f3n y dise\u00f1o, se proponen las siguientes etapas: Etapas antes de la comercializaci\u00f3n de IoT: Idea de implementaci\u00f3n : Evaluar la posibilidad de implementar una soluci\u00f3n IoT en tu empresa o en tus actividades diarias. Antes de comenzar, es importante preguntarse si ya existe una soluci\u00f3n similar y qu\u00e9 ventajas ofrece. Selecci\u00f3n de componentes y dispositivos intermedios : Considerar el rendimiento, consumo y precio de los componentes. El prototipo permitir\u00e1 obtener una primera aproximaci\u00f3n de la soluci\u00f3n. Dise\u00f1o de sistemas de comunicaciones : Integrar sistemas operativos que incluyan la capa de comunicaciones. La frecuencia, potencia y modo de operaci\u00f3n son aspectos clave a tener en cuenta. Establecer infraestructura de comunicaciones e informaci\u00f3n : Esencial para estandarizar y establecer la conectividad entre diferentes dispositivos y protocolos de comunicaci\u00f3n. Garantizar la seguridad de la aplicaci\u00f3n : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Implementar infraestructura y servicios en la nube : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Desarrollar aplicaciones para el an\u00e1lisis de datos : Utilizar software y herramientas que incluyan funciones de aprendizaje autom\u00e1tico y miner\u00eda de datos, lo cual es crucial para la toma de decisiones en IoT. Dise\u00f1ar una interfaz gr\u00e1fica para el usuario : Permitir el acceso a la informaci\u00f3n de manera c\u00f3moda y sencilla, fomentando la interacci\u00f3n entre el usuario y el dispositivo. Crear software de gesti\u00f3n para aplicaciones : Este software regula el funcionamiento del dispositivo, incluyendo algoritmos de proceso, comunicaci\u00f3n, sensorizaci\u00f3n, actuaci\u00f3n y consumo energ\u00e9tico. Seleccionar proveedores de servicios : Agregar valor a trav\u00e9s de la conectividad y desarrollar nuevos servicios y soluciones en diversos entornos industriales. Desarrollar productos y soluciones verticales : Generar nuevos conocimientos y oportunidades para monetizar los datos de los dispositivos conectados mediante soluciones que transformen las organizaciones para el futuro. TD Orden de la clase y objetivo de la clase: Juego de palabras IoT Protocolos HardWare Sensor Actuador Sistema T\u00f3pico Usuario Microprocesador Discuci\u00f3n de conceptos claves \u00bfQu\u00e9 es el Internet de las Cosas? \u00bfCu\u00e1l es la importancia del IoT en el mundo de hoy? \u00bfEn qu\u00e9 sector econ\u00f3mico est\u00e1 incursionando el IoT en la actualidad? \u00bfCu\u00e1les son los elementos que intervienen en el desarrollo IoT? \u00bfQu\u00e9 ventajas tiene el IoT? \u00bfCom\u00f3 podemos hacer uso del IoT en nuestro hogar? \u00bfCom\u00f3 se le agrega el valor al IoT? Ejemplo de beneficios del IoT","title":"Clase 1"},{"location":"Clases/clase%201/#clase-1","text":"","title":"Clase 1"},{"location":"Clases/clase%201/#ti","text":"","title":"TI"},{"location":"Clases/clase%201/#iot","text":"En la actualidad se habla de la industria 4.0 , que son las industrias que se apoyan de las tecnolog\u00edas actuales para optimizar sus procesos de producci\u00f3n. Esta industria basa sus principios en 4 tecnolog\u00edas: El internet de las cosas (IOT) Sistemas Ciberf\u00edsicos Big Data Inteligencia computacional \u00bf Que viene a tu mente cuando escuchas Internet de las cosas (IOT) ? El internet de las cosas es la basa para las dem\u00e1s tecnolog\u00edas. Anteriormente este termino se usaba solo en las tecnolog\u00edas que usaban Identificaci\u00f3n por Radiofrecuencia (RFID, por sus siglas en ingles), sin embargo, con el avance de la tecnolog\u00eda el uso de IOT mostro su gran importancia para sectores como transporte, manufactura, agr\u00edcola, entre otros. El internet de las cosas busca la interconexi\u00f3n de objetos de la vida cotidiana por medio de una red de comunicaci\u00f3n como lo puede ser el internet. Donde su objetivo principal es la obtenci\u00f3n de informaci\u00f3n relevante de los objetos, ambientes, en el que estos se encuentran por medio de sensores. Tambi\u00e9n env\u00edan informaci\u00f3n a trav\u00e9s de internet ya sea para almacenarla en la nube o el an\u00e1lisis de informaci\u00f3n de manera r\u00e1pida para la toma de decisiones en tiempo real sobre procesos cr\u00edticos. En otras palabras, el internet de las cosas es una red gigante de cosas (dispositivos) y personas conectadas que recopilan, comparten datos y toman decisiones a partir de estos. El concepto de cosas incluye innumerables aparatos, como sensores, luces inteligentes en el hogar, pulseras que monitorizan la salud, piezas de sistemas de seguridad (c\u00e1maras, etc.) y componentes relacionados con la conducci\u00f3n autom\u00e1tica; todos ellos conectados a internet y otros protocolos de comunicaci\u00f3n que m\u00e1s adelante ser\u00e1n explicados. El IOT suele estar muy automatizado o mejorado con software inteligente, por lo que requiere poca interacci\u00f3n entre personas y m\u00e1quinas, y a veces ninguna. Las ventajas que tiene el IOT son: Conectividad permanente de objetos cotidianos a una red, capturando la informaci\u00f3n de estos, teniendo as\u00ed la posibilidad de crear sistemas que funcionen en tiempo real y que pueden ser aut\u00f3nomos para la toma de decisiones inteligentes. Permite generar alertas de uno o varios procesos que necesiten la intervenci\u00f3n humana Intervenci\u00f3n de diferentes sectores de la industria para el bienestar y mejoramiento de la calidad de vida de las personas","title":"IOT"},{"location":"Clases/clase%201/#historia-del-iot","text":"1982 M\u00e1quina de Coca-Cola conectada con ARPNET. 1989 World Wide Web (WWW). 1990 Primera tostadora conectada a Internet. 1993 XCOFFEE, Cafetera que informa si hay cafe o no. 1994 WEARCAM, c\u00e1mara port\u00e1til conectada a internet 1998 Introducci\u00f3n al IPv6. 1999 Aparece el termino Internet de las Cosas (IoT): fue usado por primera vez por Kevin Ashton ejecutivo de Auto-ID labs en el MIT. 2000 Internet digital Dios, LG anuncia un refrigerador con conexi\u00f3n a internet. 2004 El termino IoT se hace popular. 2005 NABAZTAG, peque\u00f1o robot conectado a internet. 2008 Este a\u00f1o se considera que naci\u00f3 el IoT debido al auge de dispositivos conectados. 2009 St. Jude Medical e IoT, Adaptador USB inal\u00e1mbrico que recib\u00eda datos del implante cardiaco de un paciente. 2010 NEST COMPANY, compa\u00f1\u00eda de electrodom\u00e9sticos inteligentes. 2011 Gartner adiciona IoT al ciclo Hype 2014 Desarrollo de est\u00e1nderes industriales, Intel, Cisco, IBM, GE, AT&T, se unen para mejorar la integraci\u00f3n de IoT en la industria. 2015 Est\u00e1ndares globales en IoT. 2016 MIRAI, primer malware de IoT. 2017 Servicios de IoT. 2020 Ciclo Hype de IoT, se observa la madurez tecnol\u00f3gica de los subtemas de IoT y cu\u00e1les son los siguientes t\u00f3picos relevantes.","title":"Historia del IOT"},{"location":"Clases/clase%201/#etapas-de-una-solucion-iot","text":"Para facilitar la creaci\u00f3n de nuevas soluciones de IoT y seguir un orden l\u00f3gico en el proceso de construcci\u00f3n y dise\u00f1o, se proponen las siguientes etapas: Etapas antes de la comercializaci\u00f3n de IoT: Idea de implementaci\u00f3n : Evaluar la posibilidad de implementar una soluci\u00f3n IoT en tu empresa o en tus actividades diarias. Antes de comenzar, es importante preguntarse si ya existe una soluci\u00f3n similar y qu\u00e9 ventajas ofrece. Selecci\u00f3n de componentes y dispositivos intermedios : Considerar el rendimiento, consumo y precio de los componentes. El prototipo permitir\u00e1 obtener una primera aproximaci\u00f3n de la soluci\u00f3n. Dise\u00f1o de sistemas de comunicaciones : Integrar sistemas operativos que incluyan la capa de comunicaciones. La frecuencia, potencia y modo de operaci\u00f3n son aspectos clave a tener en cuenta. Establecer infraestructura de comunicaciones e informaci\u00f3n : Esencial para estandarizar y establecer la conectividad entre diferentes dispositivos y protocolos de comunicaci\u00f3n. Garantizar la seguridad de la aplicaci\u00f3n : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Implementar infraestructura y servicios en la nube : Proteger la integridad y confidencialidad de los datos, ya que esto es fundamental en las infraestructuras actuales de IoT. Desarrollar aplicaciones para el an\u00e1lisis de datos : Utilizar software y herramientas que incluyan funciones de aprendizaje autom\u00e1tico y miner\u00eda de datos, lo cual es crucial para la toma de decisiones en IoT. Dise\u00f1ar una interfaz gr\u00e1fica para el usuario : Permitir el acceso a la informaci\u00f3n de manera c\u00f3moda y sencilla, fomentando la interacci\u00f3n entre el usuario y el dispositivo. Crear software de gesti\u00f3n para aplicaciones : Este software regula el funcionamiento del dispositivo, incluyendo algoritmos de proceso, comunicaci\u00f3n, sensorizaci\u00f3n, actuaci\u00f3n y consumo energ\u00e9tico. Seleccionar proveedores de servicios : Agregar valor a trav\u00e9s de la conectividad y desarrollar nuevos servicios y soluciones en diversos entornos industriales. Desarrollar productos y soluciones verticales : Generar nuevos conocimientos y oportunidades para monetizar los datos de los dispositivos conectados mediante soluciones que transformen las organizaciones para el futuro.","title":"Etapas de una soluci\u00f3n IoT"},{"location":"Clases/clase%201/#td","text":"Orden de la clase y objetivo de la clase: Juego de palabras IoT Protocolos HardWare Sensor Actuador Sistema T\u00f3pico Usuario Microprocesador Discuci\u00f3n de conceptos claves \u00bfQu\u00e9 es el Internet de las Cosas? \u00bfCu\u00e1l es la importancia del IoT en el mundo de hoy? \u00bfEn qu\u00e9 sector econ\u00f3mico est\u00e1 incursionando el IoT en la actualidad? \u00bfCu\u00e1les son los elementos que intervienen en el desarrollo IoT? \u00bfQu\u00e9 ventajas tiene el IoT? \u00bfCom\u00f3 podemos hacer uso del IoT en nuestro hogar? \u00bfCom\u00f3 se le agrega el valor al IoT? Ejemplo de beneficios del IoT","title":"TD"},{"location":"Clases/clase%2010/","text":"Clase 10 TI Dashboard Un Dashboard para IoT es una herramienta de visualizaci\u00f3n de datos, la cual recolecta una colecci\u00f3n de datos transmitidos por una red de dispositivos conectados; para transformalos, organizarlos y mostrarlos. El proposito principal de un Dashboard IoT es el de proveer informaci\u00f3n leible de un vistazo a el ser humano, es decir a el usuario, a traves de un monitor remoto donde se presente datos en tiempo real y/o un historial de datos. Diferentes aplicaciones de Dashboard IOt Cloud de Arduino El Arduino IoT Cloud es una plataforma f\u00e1cil de usar, creada para desarrolladores , integradores de sistema y para hobby , la cual le permite al usuario manejar y desarrollar aplicaciones IoT que resuelvan problemas de la vida real en un ambiente laboral o de la vida cotidiana. Particle Particle ofrece un desarrollador amplio como Arduino y una amplia nube de tipo desde el extremo hasta la nube para el manejo de dispositivos conectados. Puede trabajar gran cantidad de arreglos de tareas como lo es, el seguimiento de activos, el manejo de flotas de vehiculos (Trasnportes de alimento, buses, logistica, etc), mantenimiento predictivo, monitoreo ambiental, llenar ordenes en tiempo real y monitoreo y control remoto. Las ventajas de esta plataforma son: - Conectividad IoT a traves de Wi-Fi, celular y BLE de forma global en ,as de 150 paises - Tiene un seguridad fuerte incluyen la encriptaci\u00f3n de los dispositivos, autenticaci\u00f3n PKI, inicio de sesi\u00f3n con protocolos robustos y controles de privacidad fuertes - Cuenta con excelente escalabilidad, que incluye aprovicionamiento y escalamiento de dispositivos automatico. - Una comunidad de ususarios grande y buenas capacidades de soporte Las desventas son: - La configuraci\u00f3n es compleja, puede ser propensa a disrrupciones e interrupciones. - Tiene un alto costo inicial y reduce de manera limitada los costos de operaci\u00f3n y desarrollos - Los usuarios se quejan de que la plataforma puede ser compleja TD Preguntas sobre el tema de Dashboard Elegir plataforma donde se desarrollara el Dashboard Realizar una demostraci\u00f3n de Dashboard Ejercicios Individuales de Dashboard","title":"Clase 10"},{"location":"Clases/clase%2010/#clase-10","text":"","title":"Clase 10"},{"location":"Clases/clase%2010/#ti","text":"","title":"TI"},{"location":"Clases/clase%2010/#dashboard","text":"Un Dashboard para IoT es una herramienta de visualizaci\u00f3n de datos, la cual recolecta una colecci\u00f3n de datos transmitidos por una red de dispositivos conectados; para transformalos, organizarlos y mostrarlos. El proposito principal de un Dashboard IoT es el de proveer informaci\u00f3n leible de un vistazo a el ser humano, es decir a el usuario, a traves de un monitor remoto donde se presente datos en tiempo real y/o un historial de datos.","title":"Dashboard"},{"location":"Clases/clase%2010/#diferentes-aplicaciones-de-dashboard","text":"","title":"Diferentes aplicaciones de Dashboard"},{"location":"Clases/clase%2010/#iot-cloud-de-arduino","text":"El Arduino IoT Cloud es una plataforma f\u00e1cil de usar, creada para desarrolladores , integradores de sistema y para hobby , la cual le permite al usuario manejar y desarrollar aplicaciones IoT que resuelvan problemas de la vida real en un ambiente laboral o de la vida cotidiana.","title":"IOt Cloud de Arduino"},{"location":"Clases/clase%2010/#particle","text":"Particle ofrece un desarrollador amplio como Arduino y una amplia nube de tipo desde el extremo hasta la nube para el manejo de dispositivos conectados. Puede trabajar gran cantidad de arreglos de tareas como lo es, el seguimiento de activos, el manejo de flotas de vehiculos (Trasnportes de alimento, buses, logistica, etc), mantenimiento predictivo, monitoreo ambiental, llenar ordenes en tiempo real y monitoreo y control remoto. Las ventajas de esta plataforma son: - Conectividad IoT a traves de Wi-Fi, celular y BLE de forma global en ,as de 150 paises - Tiene un seguridad fuerte incluyen la encriptaci\u00f3n de los dispositivos, autenticaci\u00f3n PKI, inicio de sesi\u00f3n con protocolos robustos y controles de privacidad fuertes - Cuenta con excelente escalabilidad, que incluye aprovicionamiento y escalamiento de dispositivos automatico. - Una comunidad de ususarios grande y buenas capacidades de soporte Las desventas son: - La configuraci\u00f3n es compleja, puede ser propensa a disrrupciones e interrupciones. - Tiene un alto costo inicial y reduce de manera limitada los costos de operaci\u00f3n y desarrollos - Los usuarios se quejan de que la plataforma puede ser compleja","title":"Particle"},{"location":"Clases/clase%2010/#td","text":"Preguntas sobre el tema de Dashboard Elegir plataforma donde se desarrollara el Dashboard Realizar una demostraci\u00f3n de Dashboard Ejercicios Individuales de Dashboard","title":"TD"},{"location":"Clases/clase%202/","text":"Clase 2 TI El Internet de las Cosas (IoT) es una tecnolog\u00eda que est\u00e1 revolucionando el mundo, con aplicaciones en diversos sectores, para entender las diferentes aplicaciones que tiene el Internet de las Cosas, se presentan tres lecturas, cada una de las cuales contiene un proyecto que se desempe\u00f1a en un sector diferente. L\u00e9alos y reflexione sobre posibles ideas que se le ocurran para aplicar el IoT. Recomendaci\u00f3n: S\u00ed durante las lecturas aparecen terminos que desconoce, investigue al respecto, podr\u00eda ayudar a una mejor comprensi\u00f3n de estos. Aplicaci\u00f3n Sector Industrial En el sector industrial, se propone un texto que, m\u00e1s all\u00e1 de una idea industrializada, muestra c\u00f3mo el IoT puede aprovechar la informaci\u00f3n como principal activo y c\u00f3mo, a partir de este, pueden surgir nuevas ideas de negocio. Adem\u00e1s recomiendo echar un vistazo a la siguiente articulo, el cual habla sobre el IIoT o IoT Industral Link . Aplicaci\u00f3n Sector Salud Para el sector salud, se propone una lectura sobre un estudio realizado en Bogot\u00e1, para reducir lesiones por conservar mal los medicamentos. Esto es una forma de ver que, en cualquier sector, se necesita de las nuevas tecnolog\u00edas. Aplicaci\u00f3n Sector Agr\u00edcola En el siguiente art\u00edculo podr\u00e1s encontrar un ejemplo de c\u00f3mo un sistema basado en la tecnolog\u00eda de internet de las cosas es implementado para monitorear y evaluar diferentes factores en el desarrollo de un cultivo, con el objetivo de adquirir informaci\u00f3n y de esta manera tomar decisiones de forma inmediata. TD Discuci\u00f3n y soluci\u00f3n de prguntas sobre las lecturas \u00bfQu\u00e9 tal le perecieron las lecturas? \u00bfSe le ocurrieron algunas aplicaciones diferentes a las presentadas en los textos? Video sobre IoT en Colombia Dar ideas para solucionar las siguientes problem\u00e1ticas mediante IoT: \u00bfC\u00f3mo puede el Internet de las Cosas ser \u00fatil en la generaci\u00f3n de energ\u00edas renovables? \u00bfC\u00f3mo puede ser usado el IoT para el monitoreo del cambio clim\u00e1tico? \u00bfC\u00f3mo puede ser el IoT usado en el sistema educativo? Investigue una problem\u00e1tica mundial actual y piense una posible soluci\u00f3n IoT. Revise los ODS. Socializaci\u00f3n de las respuestas","title":"Clase 2"},{"location":"Clases/clase%202/#clase-2","text":"","title":"Clase 2"},{"location":"Clases/clase%202/#ti","text":"El Internet de las Cosas (IoT) es una tecnolog\u00eda que est\u00e1 revolucionando el mundo, con aplicaciones en diversos sectores, para entender las diferentes aplicaciones que tiene el Internet de las Cosas, se presentan tres lecturas, cada una de las cuales contiene un proyecto que se desempe\u00f1a en un sector diferente. L\u00e9alos y reflexione sobre posibles ideas que se le ocurran para aplicar el IoT. Recomendaci\u00f3n: S\u00ed durante las lecturas aparecen terminos que desconoce, investigue al respecto, podr\u00eda ayudar a una mejor comprensi\u00f3n de estos.","title":"TI"},{"location":"Clases/clase%202/#aplicacion-sector-industrial","text":"En el sector industrial, se propone un texto que, m\u00e1s all\u00e1 de una idea industrializada, muestra c\u00f3mo el IoT puede aprovechar la informaci\u00f3n como principal activo y c\u00f3mo, a partir de este, pueden surgir nuevas ideas de negocio. Adem\u00e1s recomiendo echar un vistazo a la siguiente articulo, el cual habla sobre el IIoT o IoT Industral Link .","title":"Aplicaci\u00f3n Sector Industrial"},{"location":"Clases/clase%202/#aplicacion-sector-salud","text":"Para el sector salud, se propone una lectura sobre un estudio realizado en Bogot\u00e1, para reducir lesiones por conservar mal los medicamentos. Esto es una forma de ver que, en cualquier sector, se necesita de las nuevas tecnolog\u00edas.","title":"Aplicaci\u00f3n Sector Salud"},{"location":"Clases/clase%202/#aplicacion-sector-agricola","text":"En el siguiente art\u00edculo podr\u00e1s encontrar un ejemplo de c\u00f3mo un sistema basado en la tecnolog\u00eda de internet de las cosas es implementado para monitorear y evaluar diferentes factores en el desarrollo de un cultivo, con el objetivo de adquirir informaci\u00f3n y de esta manera tomar decisiones de forma inmediata.","title":"Aplicaci\u00f3n Sector Agr\u00edcola"},{"location":"Clases/clase%202/#td","text":"Discuci\u00f3n y soluci\u00f3n de prguntas sobre las lecturas \u00bfQu\u00e9 tal le perecieron las lecturas? \u00bfSe le ocurrieron algunas aplicaciones diferentes a las presentadas en los textos? Video sobre IoT en Colombia Dar ideas para solucionar las siguientes problem\u00e1ticas mediante IoT: \u00bfC\u00f3mo puede el Internet de las Cosas ser \u00fatil en la generaci\u00f3n de energ\u00edas renovables? \u00bfC\u00f3mo puede ser usado el IoT para el monitoreo del cambio clim\u00e1tico? \u00bfC\u00f3mo puede ser el IoT usado en el sistema educativo? Investigue una problem\u00e1tica mundial actual y piense una posible soluci\u00f3n IoT. Revise los ODS. Socializaci\u00f3n de las respuestas","title":"TD"},{"location":"Clases/clase%203/","text":"Clase 3 TI Arquitectura IoT \u00bfQu\u00e9 es una arquitectura? Describe la interacci\u00f3n entre los componentes del sistema, por lo que permite representar de forma detallada los componentes de hardware, los protocolos de comunicaci\u00f3n y la interacci\u00f3n segura y eficiente con el software que interact\u00faa con el cliente. A partir de lo expuesto, se presentan las arquitecturas y sus principales componentes para aplicaciones de Internet de las Cosas. Requerimientos de una arquitectura IoT: Conectividad permanente : Al ser Internet de las Cosas una red de m\u00faltiples dispositivos conectados a Internet, es indispensable tener una conexi\u00f3n permanente entre dispositivos, adem\u00e1s de tener alternativas para el respaldo de informaci\u00f3n en los casos en que esta conexi\u00f3n presente fallos. Gesti\u00f3n de los datos : Debe realizar una gesti\u00f3n adecuada de los datos, debe permitir una recolecci\u00f3n de la informaci\u00f3n de forma eficiente y debe establecer las estrategias de an\u00e1lisis autom\u00e1tico de la informaci\u00f3n. Por \u00faltimo, en una arquitectura de IoT se deben establecer procedimientos que permitan la toma de decisiones a partir de la recolecci\u00f3n y an\u00e1lisis de la informaci\u00f3n. Gesti\u00f3n de los dispositivos : Debe establecer estrategias para realizar configuraciones, actualizaciones, b\u00fasqueda y reporte de fallos, de forma eficiente para todos los dispositivos interconectados. Escalabilidad : Debe permitir el registro, actualizaci\u00f3n y eliminaci\u00f3n de dispositivos de manera f\u00e1cil y r\u00e1pida. De igual manera, debe establecer estrategias de gesti\u00f3n de red que permitan el env\u00edo y registro de informaci\u00f3n sin que existan p\u00e9rdidas considerables. Flexibilidad : Debe permitir la gesti\u00f3n de dispositivos sin importar el fabricante del dispositivo y los protocolos de comunicaci\u00f3n de \u00e9stos, por lo que debe establecer procedimientos que le permitan adaptarse a los cambios tecnol\u00f3gicos y nuevos protocolos existentes. Seguridad : La seguridad en una arquitectura de Internet de las Cosas (IoT) es fundamental, por lo que se deben establecer estrategias de gesti\u00f3n de red utilizando protocolos de transferencia de informaci\u00f3n r\u00e1pidos, pero a su vez seguros. Capas en una arquitectura de IoT: Las capas en una arquitectura definen las interacciones entre el hardware del sistema IoT con los dispositivos de red, protocolos de comunicaci\u00f3n y el software de interacci\u00f3n con el usuario. En la literatura se reportan arquitecturas de IoT hasta con siete o m\u00e1s capas; esto var\u00eda dependiendo del uso de la aplicaci\u00f3n y protocolos de transferencias de informaci\u00f3n y seguridad que se requiera dependiendo el tipo de sistema IoT. Por lo tanto, una arquitectura de IoT tiene que ser escalable y flexible. A continuaci\u00f3n se expone la arquitectura de tres capas de IoT, es la base fundamental de las dem\u00e1s arquitecturas existentes. Aplicaci\u00f3n : En esta capa se encuentran las aplicaciones, generalmente interfaces, que se encargan de la interacci\u00f3n con el usuario final de la aplicaci\u00f3n. Red : En esta capa se encuentran los dispositivos de red que se encargan de gestionar todo el tr\u00e1fico de informaci\u00f3n a trav\u00e9s de la red mediante protocolos como HTTP, RESTful, MQTT, CoAP. Percepci\u00f3n : En esta capa se encuentran las cosas (Things), tambi\u00e9n llamadas entidades u objetos, que se encargan de la recolecci\u00f3n de informaci\u00f3n del entorno a trav\u00e9s de sensores y de la interacci\u00f3n con el mismo mediante actuadores. Dise\u00f1o de una soluci\u00f3n IoT: El dise\u00f1o de una soluci\u00f3n se compone de las siguientes 9 fases: Descripci\u00f3n del problema : \u00bfQu\u00e9 problema voy a solucionar? Alcance de la soluci\u00f3n Resultados esperados Nombre de la aplicaci\u00f3n Requerimientos : Son aquellas peticiones que realizan los clientes para el funcionamiento de su aplicaci\u00f3n. La abstracci\u00f3n del problema para su posterior implementaci\u00f3n. Entidades (Variables) : Nombre: debe ser \u00fanico. Tipo: num\u00e9rica, texto, booleana. Rango: finito, determinado por los sensores. Servicios (Funciones) : Son aquellas acciones que nuestro sistema IoT realiza constantemente. Por lo general, tienen retorno ya sea texto, num\u00e9rico o booleano. Se definen a partir de las abstracciones de los requerimientos iniciales. Eventos : Son lo que se ejecuta cuando alguna variable est\u00e1 fuera de sus par\u00e1metros establecidos. Por lo general, los par\u00e1metros est\u00e1n definidos por los rangos de las entidades. Estos pueden generar desde una alerta al usuario hasta el control de un actuador. Arquitectura : En la arquitectura centralizada, se posee una capa de depuraci\u00f3n. En la arquitectura distribuida, la depuraci\u00f3n se realiza en los sensores o en el servidor, no como una capa extra. Protocolos : HTTP (Hypertext Transfer Protocol) : Es el nombre dado a un protocolo que permite la petici\u00f3n de datos y recursos. Es la base para el intercambio de datos en la web. CoAP : Es usado en dispositivos con recursos limitados (Sensores inalambricos). Este protocolo pretende replicar el modo de funcionamiento HTTP. MQTT (Message Queue Telemetry Transport) : Es un protocolo de comunicaci\u00f3n Maquina a Maquina (M2M, por sus siglas en ingles). Otros m\u00e1s Almacenamiento : Base de datos Relacionales (Maria DB) Base de datos no relacionales (Firebase) Interfaz : Se define la manera en que se entregar\u00e1 la informaci\u00f3n y las soluciones. Normalmente, mediante gr\u00e1ficos. TD Resolver dudas y conversaci\u00f3n sobre el TI Apliaci\u00f3n de la estructura IoT por parte del profesor: Video de 6 min sobre la Arquitectura IoT de 4 capas (en ingles): Para este TD los estudiantes pueden ir planeando con acompa\u00f1amiento del profesor el proyecto de la materia aplicando lo aprendido sobre arquitectura IoT.","title":"Clase 3"},{"location":"Clases/clase%203/#clase-3","text":"","title":"Clase 3"},{"location":"Clases/clase%203/#ti","text":"","title":"TI"},{"location":"Clases/clase%203/#arquitectura-iot","text":"\u00bfQu\u00e9 es una arquitectura? Describe la interacci\u00f3n entre los componentes del sistema, por lo que permite representar de forma detallada los componentes de hardware, los protocolos de comunicaci\u00f3n y la interacci\u00f3n segura y eficiente con el software que interact\u00faa con el cliente. A partir de lo expuesto, se presentan las arquitecturas y sus principales componentes para aplicaciones de Internet de las Cosas. Requerimientos de una arquitectura IoT: Conectividad permanente : Al ser Internet de las Cosas una red de m\u00faltiples dispositivos conectados a Internet, es indispensable tener una conexi\u00f3n permanente entre dispositivos, adem\u00e1s de tener alternativas para el respaldo de informaci\u00f3n en los casos en que esta conexi\u00f3n presente fallos. Gesti\u00f3n de los datos : Debe realizar una gesti\u00f3n adecuada de los datos, debe permitir una recolecci\u00f3n de la informaci\u00f3n de forma eficiente y debe establecer las estrategias de an\u00e1lisis autom\u00e1tico de la informaci\u00f3n. Por \u00faltimo, en una arquitectura de IoT se deben establecer procedimientos que permitan la toma de decisiones a partir de la recolecci\u00f3n y an\u00e1lisis de la informaci\u00f3n. Gesti\u00f3n de los dispositivos : Debe establecer estrategias para realizar configuraciones, actualizaciones, b\u00fasqueda y reporte de fallos, de forma eficiente para todos los dispositivos interconectados. Escalabilidad : Debe permitir el registro, actualizaci\u00f3n y eliminaci\u00f3n de dispositivos de manera f\u00e1cil y r\u00e1pida. De igual manera, debe establecer estrategias de gesti\u00f3n de red que permitan el env\u00edo y registro de informaci\u00f3n sin que existan p\u00e9rdidas considerables. Flexibilidad : Debe permitir la gesti\u00f3n de dispositivos sin importar el fabricante del dispositivo y los protocolos de comunicaci\u00f3n de \u00e9stos, por lo que debe establecer procedimientos que le permitan adaptarse a los cambios tecnol\u00f3gicos y nuevos protocolos existentes. Seguridad : La seguridad en una arquitectura de Internet de las Cosas (IoT) es fundamental, por lo que se deben establecer estrategias de gesti\u00f3n de red utilizando protocolos de transferencia de informaci\u00f3n r\u00e1pidos, pero a su vez seguros.","title":"Arquitectura IoT"},{"location":"Clases/clase%203/#capas-en-una-arquitectura-de-iot","text":"Las capas en una arquitectura definen las interacciones entre el hardware del sistema IoT con los dispositivos de red, protocolos de comunicaci\u00f3n y el software de interacci\u00f3n con el usuario. En la literatura se reportan arquitecturas de IoT hasta con siete o m\u00e1s capas; esto var\u00eda dependiendo del uso de la aplicaci\u00f3n y protocolos de transferencias de informaci\u00f3n y seguridad que se requiera dependiendo el tipo de sistema IoT. Por lo tanto, una arquitectura de IoT tiene que ser escalable y flexible. A continuaci\u00f3n se expone la arquitectura de tres capas de IoT, es la base fundamental de las dem\u00e1s arquitecturas existentes. Aplicaci\u00f3n : En esta capa se encuentran las aplicaciones, generalmente interfaces, que se encargan de la interacci\u00f3n con el usuario final de la aplicaci\u00f3n. Red : En esta capa se encuentran los dispositivos de red que se encargan de gestionar todo el tr\u00e1fico de informaci\u00f3n a trav\u00e9s de la red mediante protocolos como HTTP, RESTful, MQTT, CoAP. Percepci\u00f3n : En esta capa se encuentran las cosas (Things), tambi\u00e9n llamadas entidades u objetos, que se encargan de la recolecci\u00f3n de informaci\u00f3n del entorno a trav\u00e9s de sensores y de la interacci\u00f3n con el mismo mediante actuadores.","title":"Capas en una arquitectura de IoT:"},{"location":"Clases/clase%203/#diseno-de-una-solucion-iot","text":"El dise\u00f1o de una soluci\u00f3n se compone de las siguientes 9 fases: Descripci\u00f3n del problema : \u00bfQu\u00e9 problema voy a solucionar? Alcance de la soluci\u00f3n Resultados esperados Nombre de la aplicaci\u00f3n Requerimientos : Son aquellas peticiones que realizan los clientes para el funcionamiento de su aplicaci\u00f3n. La abstracci\u00f3n del problema para su posterior implementaci\u00f3n. Entidades (Variables) : Nombre: debe ser \u00fanico. Tipo: num\u00e9rica, texto, booleana. Rango: finito, determinado por los sensores. Servicios (Funciones) : Son aquellas acciones que nuestro sistema IoT realiza constantemente. Por lo general, tienen retorno ya sea texto, num\u00e9rico o booleano. Se definen a partir de las abstracciones de los requerimientos iniciales. Eventos : Son lo que se ejecuta cuando alguna variable est\u00e1 fuera de sus par\u00e1metros establecidos. Por lo general, los par\u00e1metros est\u00e1n definidos por los rangos de las entidades. Estos pueden generar desde una alerta al usuario hasta el control de un actuador. Arquitectura : En la arquitectura centralizada, se posee una capa de depuraci\u00f3n. En la arquitectura distribuida, la depuraci\u00f3n se realiza en los sensores o en el servidor, no como una capa extra. Protocolos : HTTP (Hypertext Transfer Protocol) : Es el nombre dado a un protocolo que permite la petici\u00f3n de datos y recursos. Es la base para el intercambio de datos en la web. CoAP : Es usado en dispositivos con recursos limitados (Sensores inalambricos). Este protocolo pretende replicar el modo de funcionamiento HTTP. MQTT (Message Queue Telemetry Transport) : Es un protocolo de comunicaci\u00f3n Maquina a Maquina (M2M, por sus siglas en ingles). Otros m\u00e1s Almacenamiento : Base de datos Relacionales (Maria DB) Base de datos no relacionales (Firebase) Interfaz : Se define la manera en que se entregar\u00e1 la informaci\u00f3n y las soluciones. Normalmente, mediante gr\u00e1ficos.","title":"Dise\u00f1o de una soluci\u00f3n IoT:"},{"location":"Clases/clase%203/#td","text":"Resolver dudas y conversaci\u00f3n sobre el TI Apliaci\u00f3n de la estructura IoT por parte del profesor: Video de 6 min sobre la Arquitectura IoT de 4 capas (en ingles): Para este TD los estudiantes pueden ir planeando con acompa\u00f1amiento del profesor el proyecto de la materia aplicando lo aprendido sobre arquitectura IoT.","title":"TD"},{"location":"Clases/clase%204/","text":"Clase 4 TI HardWare para IoT \u00bfQu\u00e9 herramientas se usan en el IoT? Sensores Actuadores Tarjetas de desarrollo, las cuales tienen a su vez microcontroladores y microprocesadores. Lo cual permite el control de sensores y actuadores mediante programacion. Gestionar la conectividad mediante los protocolos estandarizados como lo son MQTT y HTTP, para asegurar que la informacion llegue a la nube de forma segura Interfaz grafica, comunica al usuario final la informacion entre las cosas y la nube, para ello se usan aplicaciones de desarrollo alojadas en la nube Tarjetas de Desarrollo. Una tarjeta de desarrollo es una herramienta que permite a un usuario la realizaci\u00f3n de dise\u00f1o de prototipos tecnol\u00f3gicos, cuentan con una unidad principal de procesamiento de informaci\u00f3n, as\u00ed como la integraci\u00f3n, dentro del mismo dispositivo, de los elementos necesario para realizar diferentes y variados proyectos de desarrollo y de investigaci\u00f3n. Dentro de los componentes principales con los que estas placas cuentan est\u00e1n la memoria, el bus de comunicaci\u00f3n, puertos de entrada y salida como unidades USB, Ethernet, pines de entrada y salida de prop\u00f3sito general (los cuales pueden ser digitales o anal\u00f3gicos), en algunos casos cuentan con comunicaci\u00f3n v\u00eda Wi-Fi, y en casos m\u00e1s particulares cuentan con caracter\u00edsticas especiales para la facilitaci\u00f3n de su integraci\u00f3n en sistemas IoT e Industria 4.0. Raspberry Pi Esta placa tiene gran popularidad hoy en d\u00eda, es denominada como una computadora de placa reducida (SBC, por sus siglas en ingl\u00e9s), desarrollada en el Reino Unido por la Raspberry Pi Foundation. Naci\u00f3 con la intenci\u00f3n de acercar a las personas al mundo de la inform\u00e1tica, sin embargo, r\u00e1pidamente se sali\u00f3 de ese enfoque y los usuarios la comenzaron a utilizar para el desarrollo tecnol\u00f3gico de toda \u00edndole. Raspberry es completamente un computadora, teniendo todos los perif\u00e9ricos que cualquier PC casera contiene, incluyendo unidades de almacenamiento, la capacidad de poderse conectar a monitores, conexi\u00f3n de mouse y teclados, adicionalmente, funciona con diferentes sistemas operativos, el m\u00e1s popular Raspbian que es una versi\u00f3n de Debian. A pesar de que originalmente no estaba dise\u00f1ado para el desarrollo de prototipos, esta tarjeta ha adquirido gran popularidad en esta rama, convirti\u00e9ndose en el punto central de muchos proyectos de dom\u00f3tica, IoT, e industria 4.0, En la siguiente lectura se muestra un ejemplo de IoT usando una tarjeta Raspberry Pi. Arduino Probablemente la tarjeta m\u00e1s conocida a nivel mundial. Desarrollado en 2003 en el Instituto de Dise\u00f1o Interactivo de Ivrea, Italia, con la intenci\u00f3n de hacer f\u00e1cil la programaci\u00f3n y el dise\u00f1o de prototipos. Su principal caracter\u00edstica es que, aunque existe el proyecto Arduino de manera formal (https://www.arduino.cc/), y en su p\u00e1gina se venden las placas \u201coriginales\u201d, esta tarjeta est\u00e1 desarrollada bajo el concepto de software y hardware libre, lo que implica que cualquier persona puede replicar la tarjeta sin ninguna restricci\u00f3n. Esta placa se ha popularizado en gran medida, debido a la facilidad con la que se pueden realizar proyectos acad\u00e9micos, t\u00e9cnicos y cient\u00edficos, basta con teclear en cualquier buscador \u201cArduino proyectos\u201d para que se despliegue una cantidad incontable de proyectos a realizar con la plataforma. Algunos detractores de esta herramienta, basan sus criticas precisamente en la facilidad con la que se puede programar la placa, sin embargo, hay que recordar que es precisamente esta facilidad la que ha acercado a millones de estudiantes, y personas en general, a nivel mundial al dise\u00f1o ingenieril y que se pueden realizar proyectos tan complejos como al usuario se le ocurra. En la lectura a continuaci\u00f3n se muestra un proyecto realizado haciendo uso de Arduino. TD Solci\u00f3n dudas del trabajo independiente Descargar en conjunto a los estudiantes Arduino Practicas en Arduino en clase. Con la maqueta peque\u00f1a del sem\u00e1foro: Enunciado: Controlar un sem\u00e1foro que funcione de la siguiente manera: Modo d\u00eda : Enciende el bombillo rojo durante 3 segundos, luego aoaga el bombillo rojo y enciende el bombillo amarillo durante 1.5 segundos, apaga el bombillo amarillo y enciende el bombillo verde durante 4 segundos. Al terminar los 4 segundos apaga el bombillo verde y se repite el ciclo. Modo noche : Enciende y apaga el bombillo amarillo cada medio segundo. Nota : Simular el sensor de luz con un suiche. Practica 2 Con la misma maqueta ahora los estudiantes deberan lograr controlar tanto el semaforo de carros como el de peatones. Que durante el sem\u00e1foro de carros este en rojo el de peatones este en verde y cuando el de carros este en verde y amarillo el de peatones este en rojo. Una vez lograda la tarea anterior, el estudiaante debera agregar los parpadeos de aviso del fin de la luz verde.","title":"Clase 4"},{"location":"Clases/clase%204/#clase-4","text":"","title":"Clase 4"},{"location":"Clases/clase%204/#ti","text":"","title":"TI"},{"location":"Clases/clase%204/#hardware-para-iot","text":"\u00bfQu\u00e9 herramientas se usan en el IoT? Sensores Actuadores Tarjetas de desarrollo, las cuales tienen a su vez microcontroladores y microprocesadores. Lo cual permite el control de sensores y actuadores mediante programacion. Gestionar la conectividad mediante los protocolos estandarizados como lo son MQTT y HTTP, para asegurar que la informacion llegue a la nube de forma segura Interfaz grafica, comunica al usuario final la informacion entre las cosas y la nube, para ello se usan aplicaciones de desarrollo alojadas en la nube","title":"HardWare para IoT"},{"location":"Clases/clase%204/#tarjetas-de-desarrollo","text":"Una tarjeta de desarrollo es una herramienta que permite a un usuario la realizaci\u00f3n de dise\u00f1o de prototipos tecnol\u00f3gicos, cuentan con una unidad principal de procesamiento de informaci\u00f3n, as\u00ed como la integraci\u00f3n, dentro del mismo dispositivo, de los elementos necesario para realizar diferentes y variados proyectos de desarrollo y de investigaci\u00f3n. Dentro de los componentes principales con los que estas placas cuentan est\u00e1n la memoria, el bus de comunicaci\u00f3n, puertos de entrada y salida como unidades USB, Ethernet, pines de entrada y salida de prop\u00f3sito general (los cuales pueden ser digitales o anal\u00f3gicos), en algunos casos cuentan con comunicaci\u00f3n v\u00eda Wi-Fi, y en casos m\u00e1s particulares cuentan con caracter\u00edsticas especiales para la facilitaci\u00f3n de su integraci\u00f3n en sistemas IoT e Industria 4.0.","title":"Tarjetas de Desarrollo."},{"location":"Clases/clase%204/#raspberry-pi","text":"Esta placa tiene gran popularidad hoy en d\u00eda, es denominada como una computadora de placa reducida (SBC, por sus siglas en ingl\u00e9s), desarrollada en el Reino Unido por la Raspberry Pi Foundation. Naci\u00f3 con la intenci\u00f3n de acercar a las personas al mundo de la inform\u00e1tica, sin embargo, r\u00e1pidamente se sali\u00f3 de ese enfoque y los usuarios la comenzaron a utilizar para el desarrollo tecnol\u00f3gico de toda \u00edndole. Raspberry es completamente un computadora, teniendo todos los perif\u00e9ricos que cualquier PC casera contiene, incluyendo unidades de almacenamiento, la capacidad de poderse conectar a monitores, conexi\u00f3n de mouse y teclados, adicionalmente, funciona con diferentes sistemas operativos, el m\u00e1s popular Raspbian que es una versi\u00f3n de Debian. A pesar de que originalmente no estaba dise\u00f1ado para el desarrollo de prototipos, esta tarjeta ha adquirido gran popularidad en esta rama, convirti\u00e9ndose en el punto central de muchos proyectos de dom\u00f3tica, IoT, e industria 4.0, En la siguiente lectura se muestra un ejemplo de IoT usando una tarjeta Raspberry Pi.","title":"Raspberry Pi"},{"location":"Clases/clase%204/#arduino","text":"Probablemente la tarjeta m\u00e1s conocida a nivel mundial. Desarrollado en 2003 en el Instituto de Dise\u00f1o Interactivo de Ivrea, Italia, con la intenci\u00f3n de hacer f\u00e1cil la programaci\u00f3n y el dise\u00f1o de prototipos. Su principal caracter\u00edstica es que, aunque existe el proyecto Arduino de manera formal (https://www.arduino.cc/), y en su p\u00e1gina se venden las placas \u201coriginales\u201d, esta tarjeta est\u00e1 desarrollada bajo el concepto de software y hardware libre, lo que implica que cualquier persona puede replicar la tarjeta sin ninguna restricci\u00f3n. Esta placa se ha popularizado en gran medida, debido a la facilidad con la que se pueden realizar proyectos acad\u00e9micos, t\u00e9cnicos y cient\u00edficos, basta con teclear en cualquier buscador \u201cArduino proyectos\u201d para que se despliegue una cantidad incontable de proyectos a realizar con la plataforma. Algunos detractores de esta herramienta, basan sus criticas precisamente en la facilidad con la que se puede programar la placa, sin embargo, hay que recordar que es precisamente esta facilidad la que ha acercado a millones de estudiantes, y personas en general, a nivel mundial al dise\u00f1o ingenieril y que se pueden realizar proyectos tan complejos como al usuario se le ocurra. En la lectura a continuaci\u00f3n se muestra un proyecto realizado haciendo uso de Arduino.","title":"Arduino"},{"location":"Clases/clase%204/#td","text":"Solci\u00f3n dudas del trabajo independiente Descargar en conjunto a los estudiantes Arduino Practicas en Arduino en clase. Con la maqueta peque\u00f1a del sem\u00e1foro: Enunciado: Controlar un sem\u00e1foro que funcione de la siguiente manera: Modo d\u00eda : Enciende el bombillo rojo durante 3 segundos, luego aoaga el bombillo rojo y enciende el bombillo amarillo durante 1.5 segundos, apaga el bombillo amarillo y enciende el bombillo verde durante 4 segundos. Al terminar los 4 segundos apaga el bombillo verde y se repite el ciclo. Modo noche : Enciende y apaga el bombillo amarillo cada medio segundo. Nota : Simular el sensor de luz con un suiche. Practica 2 Con la misma maqueta ahora los estudiantes deberan lograr controlar tanto el semaforo de carros como el de peatones. Que durante el sem\u00e1foro de carros este en rojo el de peatones este en verde y cuando el de carros este en verde y amarillo el de peatones este en rojo. Una vez lograda la tarea anterior, el estudiaante debera agregar los parpadeos de aviso del fin de la luz verde.","title":"TD"},{"location":"Clases/clase%205/","text":"Clase 5 TI Sensores \u00bfQu\u00e9 son los sensores? Los sensores son objetos capaces de detectar magnitudes f\u00edsicas o qu\u00edmicas, llamadas variables de instrumentaci\u00f3n, y transformarlas en variables el\u00e9ctricas. Las variables de instrumentaci\u00f3n pueden ser por ejemplo: intensidad lum\u00ednica, temperatura, humedad, distancia, aceleraci\u00f3n, pH, etc. Por otro lado una magnitud el\u00e9ctrica puede ser una resistencia el\u00e9ctrica, capacidad el\u00e9ctrica, tensi\u00f3n el\u00e9ctrica, corriente el\u00e9ctrica, entre otros. Sensor anal\u00f3gico Un sensor anal\u00f3gico es aquel que, como salida, emite una se\u00f1al comprendida por un campo de valores instant\u00e1neos que var\u00edan en el tiempo, y son proporcionales al efecto que est\u00e1n midiendo; por ejemplo un term\u00f3metro es un dispositivo anal\u00f3gico. La temperatura se mide en grados que pueden tener, en cualquier momento un valor determinado, diferentes valores que son proporcionales a su indicador, o a su salida en caso de una dispositivo electr\u00f3nico. En otras palabras los sensores anal\u00f3gicos son aquellos que miden valores diferentes a 1 o 0. Temperatura, humedad, aceleraci\u00f3n, velocidad, etc. En Arduino estos sensores que trabajan con se\u00f1al continua, sabiendo que Arduio trabaja con una corriente entre 0V y 5V, pueden tomar cualquier valor entre 0V y 5V. Para estos sensores se necesitan conversores de anal\u00f3gicos - digital (ADC), las tarjetas de desarrollo Arduino cuentan con un ADC integrado de 10 bits osea 1024 valores que van de 0 a 1023, para adquirir la informaci\u00f3n del sensor se hace uso de la funci\u00f3n analogRead(PIN) Sensor digital Un sensor digital es un dispositivo que puede adoptar \u00fanicamente dos valores de salida; 1 o 0, encendido o apagado, s\u00ed o no. Los estados de un sensor digital son absolutos y \u00fanicos, y se usan donde se desea verificar estados de verdadero o negaci\u00f3n . Por ejemplo en una banda transportadora hay un sensor de posici\u00f3n al final del recorrido, el cual esta en reposo (0), mientras no haya llegado la caja al final del recorrido y cambia inmediantamente a encendido (1) en cuanto la caja llega a \u00e9l y el sistema realiza alguna acci\u00f3n basado en dicha condici\u00f3n. En Arduino estos sensores que son absolutos solo podr\u00edan ser 0V o 5V, no un valor entre ellos, para su adquisici\u00f3n se hace uso de la funci\u00f3n digitalRead(PIN) . Informaci\u00f3n extra La universidad cuenta con tarjetas Arduino Mega 2560, las cuales poseen 16 canales de entrada, conversores an\u00e1logos/digitales de 10 bits. Un conversor ADC convierte la se\u00f1al an\u00e1loga en un n\u00famero digital (binario), \u00e9l cual es proporcional a la se\u00f1al an\u00e1loga. Esto quiere decir que si dividimos los 5V entre 1023 que son los valores de acuerdo al n\u00famero de bits, siendo entonces 5V/1023 = 4.28 mV, entonces cuando la se\u00f1al an\u00e1loga sea 0V le corresponde el numero digital = 0000000000 y para 5V = 1111111111. PWM El Pulse Width Modulation (Modulaci\u00f3n por ancho de pulso) es una t\u00e9cnica que se usa para transmitir se\u00f1ales anal\u00f3gicas cuya se\u00f1al portadora ser\u00e1 digital. En esta t\u00e9cnica se modifica el ciclo de trabajo de una se\u00f1al peri\u00f3dica (una senoidal o una cuadrada, por ejemplo), ya sea para transmitir informaci\u00f3n a trav\u00e9s de un canal de comunicaciones o para controlar la cantidad de energ\u00eda que se env\u00eda a una carga. El ciclo de trabajo (duty cycle) de una se\u00f1al peri\u00f3dica es el ancho de su parte positiva, en relaci\u00f3n con el per\u00edodo. Est\u00e1 expresado en porcentaje, por tanto, un duty cycle de 10% indica que est\u00e1 10 de 100 a nivel alto. Duty cycle = t / T t = tiempo en parte positiva T = Periodo, tiempo total B\u00e1sicamente, consiste en activar una salida digital durante un tiempo y mantenerla apagada durante el resto, generando as\u00ed pulsos positivos que se repiten de manera constante. Por tanto, la frecuencia es constante (es decir, el tiempo entre disparo de pulsos), mientras que se hace variar la anchura del pulso, el duty cycle. El promedio de esta tensi\u00f3n de salida, a lo largo del tiempo, ser\u00e1 igual al valor anal\u00f3gico deseado. El PWM tiene diferentes usos como lo es: - cambiar intensidad lum\u00ednica de un LED, disponer de una salida anal\u00f3gica; si la salida digital est\u00e1 filtrada, esto proveer\u00e1 de un voltaje entre el 0% y el 100% - Generar se\u00f1ales de audio. - Proveer de un control de velocidad variable para motores - Generar una se\u00f1al modulada, por ejemplo para utilizar un LED infrarrojo para control remoto. Algunos sensores existentes DHT11/DHT22 Ambos son sensores de temperatura y humedad, una de las ventajas que nos ofrecen los sensores DHT, adem\u00e1s de medir la temperatura y la humedad, es que son digitales. A diferencia de sensores como el LM35, este sensor utiliza un pin digital para enviarnos la informaci\u00f3n y por lo tanto, se produce menos ruido. Modelo DHT11 Alimentaci\u00f3n de 3,5 V a 5 V Consumo 2,5 mA Se\u00f1al de salida Digital Temperatura Rango de 0\u00baC a 50\u00baC Precisi\u00f3n a 25\u00baC \u00b1 2\u00baC Resoluci\u00f3n 1\u00baC (8-bit) Humedad Rango de 20% RH a 90% RH Precisi\u00f3n entre 0\u00baC y 50\u00baC \u00b1 5% RH Resoluci\u00f3n 1% RH LM35 Es un sensor de temperatura que lee entre -55\u00b0C a 150\u00b0C, donde 1\u00b0C equivale a 10 mV y soporta voltajes entre 4V y 30V. Ficha t\u00e9cnica del LM35 . Entonces para calcular la temperatura en funci\u00f3n del voltaje que facilita el LM35 es: Temperatura = Valor * 5 * 100 / 1024. Dos cosas a tener en cuenta son la utilizaci\u00f3n del monitor serie y de la funci\u00f3n delay. El puerto serie nos permite ver el resultado de una forma r\u00e1pida a trav\u00e9s del entorno de desarrollo de Arduino. LED RGB Este tipo de diodos tienen en un mismo encapsulado un LED de cada uno de los colores b\u00e1sicos, rojo, verde y azul (Red, Green, Blue), de ah\u00ed su nombre, y comparten un c\u00e1todo com\u00fan (Ground). Se pueden alimentar los 3 LEDs al mismo tiempo o generar todo tipo de combinaciones. Los Monitores o pantallas con LEDs utilizan LEDs RGB que act\u00faan como p\u00edxeles, y dedicados controladores de video generan las combinaciones e intensidades adecuadas para darle a cada LED (p\u00edxel) la tonalidad y color correspondiente para generar en grupo la imagen que se ve. Por otro lado si energizamos cada LED con resistencias que son fijas, los colores ser\u00e1n fijos. Pero si utilizamos resistencias variables o un sistema modulador de ancho de pulsos (PWM para LEDs RGB) podremos atenuar o intensificar los colores combinando infinidad de tonalidades del rojo, verde y azul, barriendo pr\u00e1cticamente con toda la gama de colores. TD Re alimentaci\u00f3n del TI Leer la temperatura desde el sensor LM35 Agregar la libreria DHT a Arduino para realizar la lectura de temperatura y humedad Jugar con el bombillo LED RGB","title":"Clase 5"},{"location":"Clases/clase%205/#clase-5","text":"","title":"Clase 5"},{"location":"Clases/clase%205/#ti","text":"","title":"TI"},{"location":"Clases/clase%205/#sensores","text":"\u00bfQu\u00e9 son los sensores? Los sensores son objetos capaces de detectar magnitudes f\u00edsicas o qu\u00edmicas, llamadas variables de instrumentaci\u00f3n, y transformarlas en variables el\u00e9ctricas. Las variables de instrumentaci\u00f3n pueden ser por ejemplo: intensidad lum\u00ednica, temperatura, humedad, distancia, aceleraci\u00f3n, pH, etc. Por otro lado una magnitud el\u00e9ctrica puede ser una resistencia el\u00e9ctrica, capacidad el\u00e9ctrica, tensi\u00f3n el\u00e9ctrica, corriente el\u00e9ctrica, entre otros.","title":"Sensores"},{"location":"Clases/clase%205/#sensor-analogico","text":"Un sensor anal\u00f3gico es aquel que, como salida, emite una se\u00f1al comprendida por un campo de valores instant\u00e1neos que var\u00edan en el tiempo, y son proporcionales al efecto que est\u00e1n midiendo; por ejemplo un term\u00f3metro es un dispositivo anal\u00f3gico. La temperatura se mide en grados que pueden tener, en cualquier momento un valor determinado, diferentes valores que son proporcionales a su indicador, o a su salida en caso de una dispositivo electr\u00f3nico. En otras palabras los sensores anal\u00f3gicos son aquellos que miden valores diferentes a 1 o 0. Temperatura, humedad, aceleraci\u00f3n, velocidad, etc. En Arduino estos sensores que trabajan con se\u00f1al continua, sabiendo que Arduio trabaja con una corriente entre 0V y 5V, pueden tomar cualquier valor entre 0V y 5V. Para estos sensores se necesitan conversores de anal\u00f3gicos - digital (ADC), las tarjetas de desarrollo Arduino cuentan con un ADC integrado de 10 bits osea 1024 valores que van de 0 a 1023, para adquirir la informaci\u00f3n del sensor se hace uso de la funci\u00f3n analogRead(PIN)","title":"Sensor anal\u00f3gico"},{"location":"Clases/clase%205/#sensor-digital","text":"Un sensor digital es un dispositivo que puede adoptar \u00fanicamente dos valores de salida; 1 o 0, encendido o apagado, s\u00ed o no. Los estados de un sensor digital son absolutos y \u00fanicos, y se usan donde se desea verificar estados de verdadero o negaci\u00f3n . Por ejemplo en una banda transportadora hay un sensor de posici\u00f3n al final del recorrido, el cual esta en reposo (0), mientras no haya llegado la caja al final del recorrido y cambia inmediantamente a encendido (1) en cuanto la caja llega a \u00e9l y el sistema realiza alguna acci\u00f3n basado en dicha condici\u00f3n. En Arduino estos sensores que son absolutos solo podr\u00edan ser 0V o 5V, no un valor entre ellos, para su adquisici\u00f3n se hace uso de la funci\u00f3n digitalRead(PIN) .","title":"Sensor digital"},{"location":"Clases/clase%205/#informacion-extra","text":"La universidad cuenta con tarjetas Arduino Mega 2560, las cuales poseen 16 canales de entrada, conversores an\u00e1logos/digitales de 10 bits. Un conversor ADC convierte la se\u00f1al an\u00e1loga en un n\u00famero digital (binario), \u00e9l cual es proporcional a la se\u00f1al an\u00e1loga. Esto quiere decir que si dividimos los 5V entre 1023 que son los valores de acuerdo al n\u00famero de bits, siendo entonces 5V/1023 = 4.28 mV, entonces cuando la se\u00f1al an\u00e1loga sea 0V le corresponde el numero digital = 0000000000 y para 5V = 1111111111.","title":"Informaci\u00f3n extra"},{"location":"Clases/clase%205/#pwm","text":"El Pulse Width Modulation (Modulaci\u00f3n por ancho de pulso) es una t\u00e9cnica que se usa para transmitir se\u00f1ales anal\u00f3gicas cuya se\u00f1al portadora ser\u00e1 digital. En esta t\u00e9cnica se modifica el ciclo de trabajo de una se\u00f1al peri\u00f3dica (una senoidal o una cuadrada, por ejemplo), ya sea para transmitir informaci\u00f3n a trav\u00e9s de un canal de comunicaciones o para controlar la cantidad de energ\u00eda que se env\u00eda a una carga. El ciclo de trabajo (duty cycle) de una se\u00f1al peri\u00f3dica es el ancho de su parte positiva, en relaci\u00f3n con el per\u00edodo. Est\u00e1 expresado en porcentaje, por tanto, un duty cycle de 10% indica que est\u00e1 10 de 100 a nivel alto. Duty cycle = t / T t = tiempo en parte positiva T = Periodo, tiempo total B\u00e1sicamente, consiste en activar una salida digital durante un tiempo y mantenerla apagada durante el resto, generando as\u00ed pulsos positivos que se repiten de manera constante. Por tanto, la frecuencia es constante (es decir, el tiempo entre disparo de pulsos), mientras que se hace variar la anchura del pulso, el duty cycle. El promedio de esta tensi\u00f3n de salida, a lo largo del tiempo, ser\u00e1 igual al valor anal\u00f3gico deseado. El PWM tiene diferentes usos como lo es: - cambiar intensidad lum\u00ednica de un LED, disponer de una salida anal\u00f3gica; si la salida digital est\u00e1 filtrada, esto proveer\u00e1 de un voltaje entre el 0% y el 100% - Generar se\u00f1ales de audio. - Proveer de un control de velocidad variable para motores - Generar una se\u00f1al modulada, por ejemplo para utilizar un LED infrarrojo para control remoto.","title":"PWM"},{"location":"Clases/clase%205/#algunos-sensores-existentes","text":"","title":"Algunos sensores existentes"},{"location":"Clases/clase%205/#dht11dht22","text":"Ambos son sensores de temperatura y humedad, una de las ventajas que nos ofrecen los sensores DHT, adem\u00e1s de medir la temperatura y la humedad, es que son digitales. A diferencia de sensores como el LM35, este sensor utiliza un pin digital para enviarnos la informaci\u00f3n y por lo tanto, se produce menos ruido. Modelo DHT11 Alimentaci\u00f3n de 3,5 V a 5 V Consumo 2,5 mA Se\u00f1al de salida Digital Temperatura Rango de 0\u00baC a 50\u00baC Precisi\u00f3n a 25\u00baC \u00b1 2\u00baC Resoluci\u00f3n 1\u00baC (8-bit) Humedad Rango de 20% RH a 90% RH Precisi\u00f3n entre 0\u00baC y 50\u00baC \u00b1 5% RH Resoluci\u00f3n 1% RH","title":"DHT11/DHT22"},{"location":"Clases/clase%205/#lm35","text":"Es un sensor de temperatura que lee entre -55\u00b0C a 150\u00b0C, donde 1\u00b0C equivale a 10 mV y soporta voltajes entre 4V y 30V. Ficha t\u00e9cnica del LM35 . Entonces para calcular la temperatura en funci\u00f3n del voltaje que facilita el LM35 es: Temperatura = Valor * 5 * 100 / 1024. Dos cosas a tener en cuenta son la utilizaci\u00f3n del monitor serie y de la funci\u00f3n delay. El puerto serie nos permite ver el resultado de una forma r\u00e1pida a trav\u00e9s del entorno de desarrollo de Arduino.","title":"LM35"},{"location":"Clases/clase%205/#led-rgb","text":"Este tipo de diodos tienen en un mismo encapsulado un LED de cada uno de los colores b\u00e1sicos, rojo, verde y azul (Red, Green, Blue), de ah\u00ed su nombre, y comparten un c\u00e1todo com\u00fan (Ground). Se pueden alimentar los 3 LEDs al mismo tiempo o generar todo tipo de combinaciones. Los Monitores o pantallas con LEDs utilizan LEDs RGB que act\u00faan como p\u00edxeles, y dedicados controladores de video generan las combinaciones e intensidades adecuadas para darle a cada LED (p\u00edxel) la tonalidad y color correspondiente para generar en grupo la imagen que se ve. Por otro lado si energizamos cada LED con resistencias que son fijas, los colores ser\u00e1n fijos. Pero si utilizamos resistencias variables o un sistema modulador de ancho de pulsos (PWM para LEDs RGB) podremos atenuar o intensificar los colores combinando infinidad de tonalidades del rojo, verde y azul, barriendo pr\u00e1cticamente con toda la gama de colores.","title":"LED RGB"},{"location":"Clases/clase%205/#td","text":"Re alimentaci\u00f3n del TI Leer la temperatura desde el sensor LM35 Agregar la libreria DHT a Arduino para realizar la lectura de temperatura y humedad Jugar con el bombillo LED RGB","title":"TD"},{"location":"Clases/clase%206/","text":"Clase 6 TI Instalaci\u00f3n de Node-RED Node-RED es una herramienta de desarrollo basada en flujo para programaci\u00f3n visual desarrollada originalmente por IBM para conectar dispositivos de hardware, API y servicios en l\u00ednea como parte de la Internet de las cosas. Wikipedia Para el trabajo independiente de esta semana, instalaran node red y se realizaran varios ejercicios basicos para el entendimiento de esta herramienta. Primer paso para la instalaci\u00f3n. Ingresando a Node.js, descarga la \u00faltima versi\u00f3n de Node.js a trav\u00e9s del siguiente link: Node.js Recuerda instalar la opci\u00f3n adecuada para tu sistema operativo. Segundo paso para la instalaci\u00f3n. Ejecuta el archivo descargado (instalador). Para la instalaci\u00f3n se requiere serr el administrador local, en caso de que no lo seas se solicitar\u00e1 una contrase\u00f1a de administrador. Tercer paso para la instalaci\u00f3n. Con el Node.js instalado, se abre el terminal del computador con las teclas windows + R (en Windows), CMD, aceptar; en Mac se abre con la aplicaci\u00f3n terminal. Cuarto paso para la instalaci\u00f3n. Copia y pega el siguiente comando: npm install -g --unsafe-perm node-red node-red-admin en el terminal abierto en el paso anterior. Quinto paso para la instalaci\u00f3n. Una vez termine la instalaci\u00f3n escribe el siguiente comando: node-red en el terminal. Inmediatamente se ejecutara Node-Red. Nota: No cierres el terminal mientras haces uso de Node-RED. Sexto paso para la instalaci\u00f3n. Puedes abrir node red desde el terminal dando click sobre la ruta o ir al navegador y pegar en el buscador la siguiente direcci\u00f3n: http://127.0.0.1:1880 y se abrira el interfaz principal de Node-RED. Entorno de Desarrollo Node-RED En Node-Red, simplemente se conectan los nodos de entrada, salida y funci\u00f3n para crear flujos y de esta manera procesar datos, controlar cosas o enviar alertas. La principal ventaja de Node-Red es que es una herramienta de c\u00f3digo abierto para crear aplicaciones de IoT simplificando el componente de programaci\u00f3n. A diferencia de la programaci\u00f3n escrita, Node Red utiliza la programaci\u00f3n visual-gr\u00e1fica que permite conectar bloques de c\u00f3digo, conocidos como nodos, para realizar tareas espec\u00edficas. Caracter\u00edsticas de Node-RED La interfaz de Node-Red est\u00e1 dividida en tres secciones principales: el Panel de Nodos (1), el Panel de Hojas (2) y el Panel de Info y Debug (3). Node-Red viene con una secci\u00f3n de nodos b\u00e1sicos configurados de f\u00e1brica. Dichos nodos est\u00e1n organizados por categor\u00edas. Las categor\u00edas incluyen \"entrada\", \"salida\", \"funci\u00f3n\", \"social\", \"almacenamiento\" y otros que se instalan de acuerdo con la aplicaci\u00f3n a desarrollar. El panel de hojas (2) es el espacio de trabajo. Basta con seleccionar, arrastrar y soltar el nodo desde el Panel de Nodos (1) al Panel de Hojas (2). El Panel de informaci\u00f3n y depuraci\u00f3n (3) contiene dos pesta\u00f1as, \"info\" y \"debug\". La pesta\u00f1a de info proporciona informaci\u00f3n acerca de c\u00f3mo utilizar el nodo seleccionado; dicha informaci\u00f3n muestra c\u00f3mo funciona ese nodo y le brinda caracter\u00edsticas sobre el tipo, propiedades, uso y configuraci\u00f3n requerida para el nodo. La pesta\u00f1a debug proporciona informaci\u00f3n sobre el resultado obtenido de un proceso de un flujo de nodos. Para imprimir en la consola de depuraci\u00f3n debe tener un nodo de depuraci\u00f3n en el Panel de hojas (2). En algunos casos, cuando los nodos necesitan mostrar mensajes de error, se imprimen en esta pesta\u00f1a (3). Aspectos de Node-RED Para ver otros aspectos de node-red, recomendamos leer el siguiente texto realizado por la Universidad del Rosario. Nodos principales de Node-RED Como se pudieran dar cuenta la clase anterior Node-Red es una interfaz de programaci\u00f3n de tipo \u201cDrag an Drop\u201d lo que permite crear soluciones IoT de manera r\u00e1pida y segura, ya que permite la interacci\u00f3n con el usuario mediante una interfaz gr\u00e1fica f\u00e1cil e intuitiva de utilizar y a su vez permite la f\u00e1cil interacci\u00f3n de esta con el hardware, ya sean sensores o actuadores. Por lo que en este trabajo independiente se dar\u00e1 una descripci\u00f3n detallada de los nodos de entrada de funci\u00f3n y salida m\u00e1s utilizados en Node-Red. Leer el texto a continuaci\u00f3n, realizado por la Universidad del Rosario: Hola mundo Para el primer programa en Node-Red, lograremos que el programa diga \"Hola Mundo\". Abr\u00e1 node-Red y desde la interfaz siga los pasos: Arrastar un nodo Inject y un nodo Debug al workspace, al dar doble click sobre el nodo este se abre. Cambiar la configuraci\u00f3n del nodo inject de payload a string , escribir el mensaje \"Hola Mundo\" y asignar un valor de tiempo de 2 segundos para este caso y guardar los cambios. En la configuraci\u00f3n del nodo Debug , verificar que la opci\u00f3n OUTPUT se encuentre digitado payload. Crear una conexi\u00f3n entre los dos nodos, crear un flujo y luego dar al boton deploy. El \"Hola Mundo\" deber\u00eda aparecer en el Debug cada dos segundos. TD Primera apliaci\u00f3n en Node-RED","title":"Clase 6"},{"location":"Clases/clase%206/#clase-6","text":"","title":"Clase 6"},{"location":"Clases/clase%206/#ti","text":"","title":"TI"},{"location":"Clases/clase%206/#instalacion-de-node-red","text":"Node-RED es una herramienta de desarrollo basada en flujo para programaci\u00f3n visual desarrollada originalmente por IBM para conectar dispositivos de hardware, API y servicios en l\u00ednea como parte de la Internet de las cosas. Wikipedia Para el trabajo independiente de esta semana, instalaran node red y se realizaran varios ejercicios basicos para el entendimiento de esta herramienta. Primer paso para la instalaci\u00f3n. Ingresando a Node.js, descarga la \u00faltima versi\u00f3n de Node.js a trav\u00e9s del siguiente link: Node.js Recuerda instalar la opci\u00f3n adecuada para tu sistema operativo. Segundo paso para la instalaci\u00f3n. Ejecuta el archivo descargado (instalador). Para la instalaci\u00f3n se requiere serr el administrador local, en caso de que no lo seas se solicitar\u00e1 una contrase\u00f1a de administrador. Tercer paso para la instalaci\u00f3n. Con el Node.js instalado, se abre el terminal del computador con las teclas windows + R (en Windows), CMD, aceptar; en Mac se abre con la aplicaci\u00f3n terminal. Cuarto paso para la instalaci\u00f3n. Copia y pega el siguiente comando: npm install -g --unsafe-perm node-red node-red-admin en el terminal abierto en el paso anterior. Quinto paso para la instalaci\u00f3n. Una vez termine la instalaci\u00f3n escribe el siguiente comando: node-red en el terminal. Inmediatamente se ejecutara Node-Red. Nota: No cierres el terminal mientras haces uso de Node-RED. Sexto paso para la instalaci\u00f3n. Puedes abrir node red desde el terminal dando click sobre la ruta o ir al navegador y pegar en el buscador la siguiente direcci\u00f3n: http://127.0.0.1:1880 y se abrira el interfaz principal de Node-RED.","title":"Instalaci\u00f3n de Node-RED"},{"location":"Clases/clase%206/#entorno-de-desarrollo-node-red","text":"En Node-Red, simplemente se conectan los nodos de entrada, salida y funci\u00f3n para crear flujos y de esta manera procesar datos, controlar cosas o enviar alertas. La principal ventaja de Node-Red es que es una herramienta de c\u00f3digo abierto para crear aplicaciones de IoT simplificando el componente de programaci\u00f3n. A diferencia de la programaci\u00f3n escrita, Node Red utiliza la programaci\u00f3n visual-gr\u00e1fica que permite conectar bloques de c\u00f3digo, conocidos como nodos, para realizar tareas espec\u00edficas.","title":"Entorno de Desarrollo Node-RED"},{"location":"Clases/clase%206/#caracteristicas-de-node-red","text":"La interfaz de Node-Red est\u00e1 dividida en tres secciones principales: el Panel de Nodos (1), el Panel de Hojas (2) y el Panel de Info y Debug (3). Node-Red viene con una secci\u00f3n de nodos b\u00e1sicos configurados de f\u00e1brica. Dichos nodos est\u00e1n organizados por categor\u00edas. Las categor\u00edas incluyen \"entrada\", \"salida\", \"funci\u00f3n\", \"social\", \"almacenamiento\" y otros que se instalan de acuerdo con la aplicaci\u00f3n a desarrollar. El panel de hojas (2) es el espacio de trabajo. Basta con seleccionar, arrastrar y soltar el nodo desde el Panel de Nodos (1) al Panel de Hojas (2). El Panel de informaci\u00f3n y depuraci\u00f3n (3) contiene dos pesta\u00f1as, \"info\" y \"debug\". La pesta\u00f1a de info proporciona informaci\u00f3n acerca de c\u00f3mo utilizar el nodo seleccionado; dicha informaci\u00f3n muestra c\u00f3mo funciona ese nodo y le brinda caracter\u00edsticas sobre el tipo, propiedades, uso y configuraci\u00f3n requerida para el nodo. La pesta\u00f1a debug proporciona informaci\u00f3n sobre el resultado obtenido de un proceso de un flujo de nodos. Para imprimir en la consola de depuraci\u00f3n debe tener un nodo de depuraci\u00f3n en el Panel de hojas (2). En algunos casos, cuando los nodos necesitan mostrar mensajes de error, se imprimen en esta pesta\u00f1a (3).","title":"Caracter\u00edsticas de Node-RED"},{"location":"Clases/clase%206/#aspectos-de-node-red","text":"Para ver otros aspectos de node-red, recomendamos leer el siguiente texto realizado por la Universidad del Rosario.","title":"Aspectos de Node-RED"},{"location":"Clases/clase%206/#nodos-principales-de-node-red","text":"Como se pudieran dar cuenta la clase anterior Node-Red es una interfaz de programaci\u00f3n de tipo \u201cDrag an Drop\u201d lo que permite crear soluciones IoT de manera r\u00e1pida y segura, ya que permite la interacci\u00f3n con el usuario mediante una interfaz gr\u00e1fica f\u00e1cil e intuitiva de utilizar y a su vez permite la f\u00e1cil interacci\u00f3n de esta con el hardware, ya sean sensores o actuadores. Por lo que en este trabajo independiente se dar\u00e1 una descripci\u00f3n detallada de los nodos de entrada de funci\u00f3n y salida m\u00e1s utilizados en Node-Red. Leer el texto a continuaci\u00f3n, realizado por la Universidad del Rosario:","title":"Nodos principales de Node-RED"},{"location":"Clases/clase%206/#hola-mundo","text":"Para el primer programa en Node-Red, lograremos que el programa diga \"Hola Mundo\". Abr\u00e1 node-Red y desde la interfaz siga los pasos: Arrastar un nodo Inject y un nodo Debug al workspace, al dar doble click sobre el nodo este se abre. Cambiar la configuraci\u00f3n del nodo inject de payload a string , escribir el mensaje \"Hola Mundo\" y asignar un valor de tiempo de 2 segundos para este caso y guardar los cambios. En la configuraci\u00f3n del nodo Debug , verificar que la opci\u00f3n OUTPUT se encuentre digitado payload. Crear una conexi\u00f3n entre los dos nodos, crear un flujo y luego dar al boton deploy. El \"Hola Mundo\" deber\u00eda aparecer en el Debug cada dos segundos.","title":"Hola mundo"},{"location":"Clases/clase%206/#td","text":"Primera apliaci\u00f3n en Node-RED","title":"TD"},{"location":"Clases/clase%207/","text":"Clase 7 TI Protocolos Los protocolos de comunicaci\u00f3n son la forma como se conectan las cosas, la nube y el usuario. Estos protocolos son un conjunto de reglas que permiten la comunicaci\u00f3n entre diferentes tipos de sistemas, este conjunto de reglas esran dados por una serie de instrucciones que indican a los elementos b\u00e1sicos. Reglas: \u00bfQui\u00e9n es el remitente del mensaje? \u00bfQui\u00e9n es \u00e9l o los destinatarios del mensaje? \u00bfQu\u00e9 tipo de mensaje se va a enviar a trav\u00e9s de la red? \u00bfPor qu\u00e9 medio se va a enviar este tipo de mensaje? Los protocolos mas usados en IoT son: Protocolo Serial: se usa cuando se quiere realizar una depuraci\u00f3n de las cosas, sensores y actuadores. Se hace para realizar una variaci\u00f3n interna del dispositivo y verificar su correcto funcionamiento (Suele ser por cable, pero tambi\u00e9n tiene opci\u00f3n Bluetooth). Protocolo MQTT: Funciona de forma M2M (machine to machine), busca interconectar cosas, dispositivos, etc., mediante un broker que es un servidor al cual los dispositivos se suscriben o publican datos o recursos que normalmente son alojados en la nube. Protocolo HTTP: Funciona de forma cliente-servidor, el cliente realiza una petici\u00f3n a un servicio alojado en el servidor, este busca lo solicitado y responde al cliente. Ejemplo: direcciones web. Serial Serial Arduino El Entorno de Desarrollo Integrado (IDE) permite comunicarse con nuestro equipo a trav\u00e9s del puerto serie. Lo anterior se conoce como comunicaci\u00f3n serial. Si bien es cierto que el uso de las nuevas formas de comunicaci\u00f3n, como es el caso de USB, ha desplazado la tradicional forma de comunicaci\u00f3n (serial), la placa Arduino a\u00fan cuenta con un convertidor serial a USB, que permite comunicarse con nuestro ordenador como un dispositivo conectado a un puerto \u201cCOM\u201d a pesar de que la conexi\u00f3n este f\u00edsicamente mediante USB. De esta manera Arduino IDE permite enviar y visualizar datos que se gestionan a trav\u00e9s del puerto serie. Dicha herramienta se conoce bajo el nombre de monitor serial, la cual, se encuentra en el men\u00fa de herramientas, en la opci\u00f3n \u201cmonitor serial\u201d; lo anterior constituye la forma m\u00e1s simple que existe para establecer comunicaci\u00f3n con la placa Arduino. Es as\u00ed como se presenta algunas partes importantes de la interfaz de IDE Arduino; en el men\u00fa herramientas (1) se puede identificar el puerto al cual se conecta la palca Arduino (2) y en la parte superior derecha se puede encontrar y abrir el monitor serial para la visualizaci\u00f3n de la informaci\u00f3n adquirida. Es importante aclarar que existe una la configuraci\u00f3n previa para trabajar con la comunicaci\u00f3n serial mediante algunas instrucciones propias de la placa Arduino. Es el caso de la velocidad de transmisi\u00f3n de datos (baudios), lectura y estrategias de programaci\u00f3n para generar acciones. Serial Node-Red El funcionamiento del serial de comunicaci\u00f3n de Node Red se configura a partir de la descarga del nodo \u201cserial\u201d el cual se puede realizar de la siguiente manera: Ingresar al men\u00fa de Node Red (al lado del bot\u00f3n Deploy) y en la opci\u00f3n Manage Palette se digita la b\u00fasqueda del nodo. En este caso ser\u00e1 el nodo Serial. Es importante aclarar que durante la instalaci\u00f3n pueden generarse diferentes mensajes sobre la descarga e instalaci\u00f3n del paquete de nodos. Estos pueden asemejarse a fallas, ya que informan que no se han podido compilar los errores, pero a menudo son advertencias y el nodo continuar\u00e1 instal\u00e1ndose. Ocasionalmente, algunas plataformas requerir\u00e1n que instale el conjunto completo de herramientas para compilar el paquete subyacente. Inicialmente, existen tres nodos principales de nodos para la comunicaci\u00f3n serial: El nodo Serial In permite detectar autom\u00e1ticamente los puertos serie conectados al dispositivo; sin embargo, es necesario que lo especifique manualmente el puerto COM, la velocidad de transmisi\u00f3n etc. El nodo Serial out proporciona una conexi\u00f3n a un puerto serie saliente. Como respuesta env\u00eda el msg.payload, el cual se agrega a cada mensaje enviado al puerto serie. El nodo Serial request proporciona una conexi\u00f3n a un puerto serie de solicitud / respuesta. La idea es que el mensaje se reenviar\u00e1 al puerto serie siguiendo una cola estricta FIFO (primero en entrar, primero en salir), esperando una sola respuesta antes de transmitir la siguiente solicitud. TD Para el trabajo dependiente se realizaran varias practicas con monitor Serial, tanto en arduino como en Node-Red","title":"Clase 7"},{"location":"Clases/clase%207/#clase-7","text":"","title":"Clase 7"},{"location":"Clases/clase%207/#ti","text":"","title":"TI"},{"location":"Clases/clase%207/#protocolos","text":"Los protocolos de comunicaci\u00f3n son la forma como se conectan las cosas, la nube y el usuario. Estos protocolos son un conjunto de reglas que permiten la comunicaci\u00f3n entre diferentes tipos de sistemas, este conjunto de reglas esran dados por una serie de instrucciones que indican a los elementos b\u00e1sicos. Reglas: \u00bfQui\u00e9n es el remitente del mensaje? \u00bfQui\u00e9n es \u00e9l o los destinatarios del mensaje? \u00bfQu\u00e9 tipo de mensaje se va a enviar a trav\u00e9s de la red? \u00bfPor qu\u00e9 medio se va a enviar este tipo de mensaje? Los protocolos mas usados en IoT son: Protocolo Serial: se usa cuando se quiere realizar una depuraci\u00f3n de las cosas, sensores y actuadores. Se hace para realizar una variaci\u00f3n interna del dispositivo y verificar su correcto funcionamiento (Suele ser por cable, pero tambi\u00e9n tiene opci\u00f3n Bluetooth). Protocolo MQTT: Funciona de forma M2M (machine to machine), busca interconectar cosas, dispositivos, etc., mediante un broker que es un servidor al cual los dispositivos se suscriben o publican datos o recursos que normalmente son alojados en la nube. Protocolo HTTP: Funciona de forma cliente-servidor, el cliente realiza una petici\u00f3n a un servicio alojado en el servidor, este busca lo solicitado y responde al cliente. Ejemplo: direcciones web.","title":"Protocolos"},{"location":"Clases/clase%207/#serial","text":"","title":"Serial"},{"location":"Clases/clase%207/#serial-arduino","text":"El Entorno de Desarrollo Integrado (IDE) permite comunicarse con nuestro equipo a trav\u00e9s del puerto serie. Lo anterior se conoce como comunicaci\u00f3n serial. Si bien es cierto que el uso de las nuevas formas de comunicaci\u00f3n, como es el caso de USB, ha desplazado la tradicional forma de comunicaci\u00f3n (serial), la placa Arduino a\u00fan cuenta con un convertidor serial a USB, que permite comunicarse con nuestro ordenador como un dispositivo conectado a un puerto \u201cCOM\u201d a pesar de que la conexi\u00f3n este f\u00edsicamente mediante USB. De esta manera Arduino IDE permite enviar y visualizar datos que se gestionan a trav\u00e9s del puerto serie. Dicha herramienta se conoce bajo el nombre de monitor serial, la cual, se encuentra en el men\u00fa de herramientas, en la opci\u00f3n \u201cmonitor serial\u201d; lo anterior constituye la forma m\u00e1s simple que existe para establecer comunicaci\u00f3n con la placa Arduino. Es as\u00ed como se presenta algunas partes importantes de la interfaz de IDE Arduino; en el men\u00fa herramientas (1) se puede identificar el puerto al cual se conecta la palca Arduino (2) y en la parte superior derecha se puede encontrar y abrir el monitor serial para la visualizaci\u00f3n de la informaci\u00f3n adquirida. Es importante aclarar que existe una la configuraci\u00f3n previa para trabajar con la comunicaci\u00f3n serial mediante algunas instrucciones propias de la placa Arduino. Es el caso de la velocidad de transmisi\u00f3n de datos (baudios), lectura y estrategias de programaci\u00f3n para generar acciones.","title":"Serial Arduino"},{"location":"Clases/clase%207/#serial-node-red","text":"El funcionamiento del serial de comunicaci\u00f3n de Node Red se configura a partir de la descarga del nodo \u201cserial\u201d el cual se puede realizar de la siguiente manera: Ingresar al men\u00fa de Node Red (al lado del bot\u00f3n Deploy) y en la opci\u00f3n Manage Palette se digita la b\u00fasqueda del nodo. En este caso ser\u00e1 el nodo Serial. Es importante aclarar que durante la instalaci\u00f3n pueden generarse diferentes mensajes sobre la descarga e instalaci\u00f3n del paquete de nodos. Estos pueden asemejarse a fallas, ya que informan que no se han podido compilar los errores, pero a menudo son advertencias y el nodo continuar\u00e1 instal\u00e1ndose. Ocasionalmente, algunas plataformas requerir\u00e1n que instale el conjunto completo de herramientas para compilar el paquete subyacente. Inicialmente, existen tres nodos principales de nodos para la comunicaci\u00f3n serial: El nodo Serial In permite detectar autom\u00e1ticamente los puertos serie conectados al dispositivo; sin embargo, es necesario que lo especifique manualmente el puerto COM, la velocidad de transmisi\u00f3n etc. El nodo Serial out proporciona una conexi\u00f3n a un puerto serie saliente. Como respuesta env\u00eda el msg.payload, el cual se agrega a cada mensaje enviado al puerto serie. El nodo Serial request proporciona una conexi\u00f3n a un puerto serie de solicitud / respuesta. La idea es que el mensaje se reenviar\u00e1 al puerto serie siguiendo una cola estricta FIFO (primero en entrar, primero en salir), esperando una sola respuesta antes de transmitir la siguiente solicitud.","title":"Serial Node-Red"},{"location":"Clases/clase%207/#td","text":"Para el trabajo dependiente se realizaran varias practicas con monitor Serial, tanto en arduino como en Node-Red","title":"TD"},{"location":"Clases/clase%208/","text":"Clase 8 TI Protocolo HTTP El Protocolo de Transferencia de HiperTexto (Hypertext Transfer Protocol) es un sencillo protocolo cliente-servidor que articula los intercambios de informaci\u00f3n entre los clientes Web y los servidores HTTP. HTTP se basa en sencillas operaciones de solicitud/respuesta. Un cliente establece una conexi\u00f3n con un servidor y env\u00eda un mensaje con los datos de la solicitud. El servidor responde con un mensaje similar, que contiene el estado de la operaci\u00f3n y su posible resultado. Todas las operaciones pueden adjuntar un objeto o recurso sobre el que act\u00faan; cada objeto Web (documento HTML, fichero multimedia o aplicaci\u00f3n CGI) es conocido por su URL. En otras palabras, el protocolo HTTP permite realizar una petici\u00f3n de datos y recursos principalmente a la web, donde su estructura est\u00e1 basada en cliente-servidor. Esto quiere decir que una petici\u00f3n de datos es iniciada por el elemento que, despu\u00e9s de unos segundos, recibir\u00e1 los datos (el cliente). La arquitectura de clientes y servidores se comunica intercambiando mensajes individuales (diferente a las comunicaciones, las cuales utilizan flujos continuos de datos). Los mensajes que env\u00eda el cliente, normalmente un navegador web, se llaman peticiones, y los mensajes enviados como respuesta por el servidor se llaman respuestas. Cada vez que un cliente realiza una petici\u00f3n a un servidor, se ejecutan los siguientes pasos: Un usuario accede a una URL, seleccionando un enlace de un documento HTML o introduci\u00e9ndola directamente en el campo Location del cliente Web. El cliente Web descodifica la URL, separando sus diferentes partes. As\u00ed identifica el protocolo de acceso, la direcci\u00f3n DNS o IP del servidor, el posible puerto opcional (el valor por defecto es 80) y el objeto requerido del servidor. Se abre una conexi\u00f3n TCP/IP con el servidor, llamando al puerto TCP correspondiente. Se realiza la petici\u00f3n. Para ello, se env\u00eda el comando necesario (GET, POST, HEAD,\u2026), la direcci\u00f3n del objeto requerido (el contenido de la URL que sigue a la direcci\u00f3n del servidor), la versi\u00f3n del protocolo HTTP empleada (casi siempre HTTP/1.0) y un conjunto variable de informaci\u00f3n, que incluye datos sobre las capacidades del buscador, datos opcionales para el servidor, entre otros. El servidor devuelve la respuesta al cliente. Consiste en un c\u00f3digo de estado y el tipo de dato MIME (Multipurpose Internet Mail Extensions) de la informaci\u00f3n de retorno, seguido de la propia informaci\u00f3n. Se cierra la conexi\u00f3n TCP. Vamos a ponerlo en practica, abre Node-Red y sigue los paso a continuaci\u00f3n: Arrastr\u00e1 al workspace un nodo inject , uno http in , uno http response , dos nodos debug y un nodo http request . En el nodo inject , en la propiedad payload seleccionar la variable string donde se escribira un dato bajo el formato json, de tal manera que simularemos la temperatura y humedad del medio ambiente. Hacer click en Done. En el nodo HTTP Request : en la propiedad \"Method,\" seleccionar POST; en el URL, escribir http://127.0.0.1:1880/SensorTemperatura, que es la direcci\u00f3n a la cual se enviar\u00e1n los datos. En \"Return,\" seleccionar la tercera opci\u00f3n, dado el formato con el cual se enviaron previamente. Dar el nombre y terminar. En los nodos debug , no se necesita configuraci\u00f3n. En el nodo HTTP In : en la secci\u00f3n de propiedades, para \"Method,\" seleccionar POST; en URL, se escribe el t\u00f3pico o tema del cual se va a recibir la informaci\u00f3n, en este caso, es \"SensorTemperatura\". Dar nombre y terminar. En el nodo HTTP Response, en la secci\u00f3n de propiedades, \u00fanicamente se modifica la etiqueta de nombre. Si todo esta bien configurado debe quedar de la siguiente manera: TD Resolver las dudas que tenga el grupo sobre HTTP Realizar la siguiente practica acompa\u00f1ados del profesor Se necesita los siguientes componentes: Tarjeta ESP8266 o equivalente FTDI de programaci\u00f3n (muchas veces ya esta incorporado en la ESP8266) Sensor de temperatura Conectar el sensor de temperatura a la tarjeta ESP8266. Instalar en Arduino la placa ESP8266 En la interfaz de Arduino vaya al men\u00fa de archivo y d\u00e9 clic en la pesta\u00f1a de preferencias En preferencias ir a la opci\u00f3n de Gestor de URLs Adicionales de Tarjetas e ingresar el siguiente URL http://arduino.esp8266.com/stable/package_esp8266com_index.json y dar clic en ok. En el men\u00fa de herramientas, en la opci\u00f3n de seleccionar placa, ir al gestor de tarjetas En el Gestor de tarjetas digite esp8266 en el cuadro de texto tipo y luego haga clic en la opci\u00f3n de acuerdo a la tarjeta a usar; seguido haga clic en el bot\u00f3n instalar o en su defecto en actualizar. A continuaci\u00f3n, espere que se instale el paquete de placas, esto puede tardar unos minutos, por favor espere a que se instale por completo. Ahora en el men\u00fa de herramientas deberia aparecer las placas ESP8266. Codigo de Arduino Cargar el codigo a la tarjeta Desarrollo del Node-RED Darle candela","title":"Clase 8"},{"location":"Clases/clase%208/#clase-8","text":"","title":"Clase 8"},{"location":"Clases/clase%208/#ti","text":"","title":"TI"},{"location":"Clases/clase%208/#protocolo-http","text":"El Protocolo de Transferencia de HiperTexto (Hypertext Transfer Protocol) es un sencillo protocolo cliente-servidor que articula los intercambios de informaci\u00f3n entre los clientes Web y los servidores HTTP. HTTP se basa en sencillas operaciones de solicitud/respuesta. Un cliente establece una conexi\u00f3n con un servidor y env\u00eda un mensaje con los datos de la solicitud. El servidor responde con un mensaje similar, que contiene el estado de la operaci\u00f3n y su posible resultado. Todas las operaciones pueden adjuntar un objeto o recurso sobre el que act\u00faan; cada objeto Web (documento HTML, fichero multimedia o aplicaci\u00f3n CGI) es conocido por su URL. En otras palabras, el protocolo HTTP permite realizar una petici\u00f3n de datos y recursos principalmente a la web, donde su estructura est\u00e1 basada en cliente-servidor. Esto quiere decir que una petici\u00f3n de datos es iniciada por el elemento que, despu\u00e9s de unos segundos, recibir\u00e1 los datos (el cliente). La arquitectura de clientes y servidores se comunica intercambiando mensajes individuales (diferente a las comunicaciones, las cuales utilizan flujos continuos de datos). Los mensajes que env\u00eda el cliente, normalmente un navegador web, se llaman peticiones, y los mensajes enviados como respuesta por el servidor se llaman respuestas. Cada vez que un cliente realiza una petici\u00f3n a un servidor, se ejecutan los siguientes pasos: Un usuario accede a una URL, seleccionando un enlace de un documento HTML o introduci\u00e9ndola directamente en el campo Location del cliente Web. El cliente Web descodifica la URL, separando sus diferentes partes. As\u00ed identifica el protocolo de acceso, la direcci\u00f3n DNS o IP del servidor, el posible puerto opcional (el valor por defecto es 80) y el objeto requerido del servidor. Se abre una conexi\u00f3n TCP/IP con el servidor, llamando al puerto TCP correspondiente. Se realiza la petici\u00f3n. Para ello, se env\u00eda el comando necesario (GET, POST, HEAD,\u2026), la direcci\u00f3n del objeto requerido (el contenido de la URL que sigue a la direcci\u00f3n del servidor), la versi\u00f3n del protocolo HTTP empleada (casi siempre HTTP/1.0) y un conjunto variable de informaci\u00f3n, que incluye datos sobre las capacidades del buscador, datos opcionales para el servidor, entre otros. El servidor devuelve la respuesta al cliente. Consiste en un c\u00f3digo de estado y el tipo de dato MIME (Multipurpose Internet Mail Extensions) de la informaci\u00f3n de retorno, seguido de la propia informaci\u00f3n. Se cierra la conexi\u00f3n TCP. Vamos a ponerlo en practica, abre Node-Red y sigue los paso a continuaci\u00f3n: Arrastr\u00e1 al workspace un nodo inject , uno http in , uno http response , dos nodos debug y un nodo http request . En el nodo inject , en la propiedad payload seleccionar la variable string donde se escribira un dato bajo el formato json, de tal manera que simularemos la temperatura y humedad del medio ambiente. Hacer click en Done. En el nodo HTTP Request : en la propiedad \"Method,\" seleccionar POST; en el URL, escribir http://127.0.0.1:1880/SensorTemperatura, que es la direcci\u00f3n a la cual se enviar\u00e1n los datos. En \"Return,\" seleccionar la tercera opci\u00f3n, dado el formato con el cual se enviaron previamente. Dar el nombre y terminar. En los nodos debug , no se necesita configuraci\u00f3n. En el nodo HTTP In : en la secci\u00f3n de propiedades, para \"Method,\" seleccionar POST; en URL, se escribe el t\u00f3pico o tema del cual se va a recibir la informaci\u00f3n, en este caso, es \"SensorTemperatura\". Dar nombre y terminar. En el nodo HTTP Response, en la secci\u00f3n de propiedades, \u00fanicamente se modifica la etiqueta de nombre. Si todo esta bien configurado debe quedar de la siguiente manera:","title":"Protocolo HTTP"},{"location":"Clases/clase%208/#td","text":"Resolver las dudas que tenga el grupo sobre HTTP Realizar la siguiente practica acompa\u00f1ados del profesor Se necesita los siguientes componentes: Tarjeta ESP8266 o equivalente FTDI de programaci\u00f3n (muchas veces ya esta incorporado en la ESP8266) Sensor de temperatura Conectar el sensor de temperatura a la tarjeta ESP8266. Instalar en Arduino la placa ESP8266 En la interfaz de Arduino vaya al men\u00fa de archivo y d\u00e9 clic en la pesta\u00f1a de preferencias En preferencias ir a la opci\u00f3n de Gestor de URLs Adicionales de Tarjetas e ingresar el siguiente URL http://arduino.esp8266.com/stable/package_esp8266com_index.json y dar clic en ok. En el men\u00fa de herramientas, en la opci\u00f3n de seleccionar placa, ir al gestor de tarjetas En el Gestor de tarjetas digite esp8266 en el cuadro de texto tipo y luego haga clic en la opci\u00f3n de acuerdo a la tarjeta a usar; seguido haga clic en el bot\u00f3n instalar o en su defecto en actualizar. A continuaci\u00f3n, espere que se instale el paquete de placas, esto puede tardar unos minutos, por favor espere a que se instale por completo. Ahora en el men\u00fa de herramientas deberia aparecer las placas ESP8266. Codigo de Arduino Cargar el codigo a la tarjeta Desarrollo del Node-RED Darle candela","title":"TD"},{"location":"Clases/clase%209/","text":"Clase 9 TI Protocolo MQTT Inicialmente, MQTT fue inventado y desarrollado por IBM a finales de los 90. Tal como sugiere su nombre, se trata de un protocolo de mensajer\u00eda con soporte para la comunicaci\u00f3n as\u00edncrona entre el emisor y el receptor del mensaje, tanto en el tiempo como en el espacio. MQTT es un protocolo de red liviano y flexible que ofrece grandes ventajas para los desarrolladores de IoT, tales como: Est\u00e1 basado en el paradigma cliente/servidor. Protocolo basado en TCP. Es un protocolo est\u00e1ndar para IoT. Conectividad M2M (M\u00e1quina a M\u00e1quina). Basado en un protocolo de mensajer\u00eda publicaci\u00f3n/suscripci\u00f3n. Hace parte de los est\u00e1ndares OASIS. Es de licencia libre. La configuraci\u00f3n del protocolo MQTT contempla dos tipos de entidades en la red: se trata de un br\u00f3ker de mensajer\u00eda y numerosos clientes. El br\u00f3ker hace las veces de un servidor, el cual recibe todos los mensajes de los clientes y, en consecuencia, direcciona estos mensajes hacia los clientes de destino programados. Un cliente es cualquier \"cosa\" que pueda interactuar con el br\u00f3ker y recibir mensajes. Un cliente inicialmente puede ser considerado como un sensor, dispositivo o aplicaci\u00f3n. Es clave resaltar que dentro de la arquitectura de MQTT, el concepto de \"t\u00f3pico\" o \"tema\" juega un papel fundamental, ya que a trav\u00e9s de estos llamados \"t\u00f3picos\" se genera la comunicaci\u00f3n entre los emisores y receptores de un mensaje que previamente se hayan suscrito a un \"t\u00f3pico\" en com\u00fan, con el objetivo de establecer la comunicaci\u00f3n internamente entre ellos. La metodolog\u00eda que se utiliza es la de publicador/suscriptor, la cual permite el env\u00edo de mensajes entre generadores de informaci\u00f3n (publicadores) y receptores de la informaci\u00f3n (suscriptores). Esto se logra a trav\u00e9s de un br\u00f3ker, que act\u00faa como fuente principal para el flujo de la informaci\u00f3n entre publicadores y suscriptores que comparten la informaci\u00f3n mediante mensajes, de acuerdo con una configuraci\u00f3n previa. En la mayor\u00eda de los casos, la configuraci\u00f3n se fundamenta en t\u00f3picos o temas. En ese sentido, un cliente se conecta al br\u00f3ker y, a su vez, puede suscribirse a cualquier \"tema\" o \"t\u00f3pico\" de mensajer\u00eda del br\u00f3ker. De esta manera: (a) El cliente publica los mensajes en un tema o t\u00f3pico, enviando el mensaje y el tema al br\u00f3ker. (b) Despu\u00e9s, el br\u00f3ker remite el mensaje a todos los clientes que se suscriben a este tema o t\u00f3pico. Como los mensajes de MQTT se organizan por temas o t\u00f3picos, en una aplicaci\u00f3n de IoT se puede especificar que determinados clientes pueden interactuar con mensajes espec\u00edficos. Por ejemplo, un sensor de temperatura publicar\u00e1 el valor bajo el tema o t\u00f3pico \"sensor temp\" y se suscribir\u00e1n al tema \"supervisi\u00f3n temp\". Ejercicio en Node-Red Para hacerse una idea de como trabajar con este protocolo, se plantea el siguiente ejercicio en Node-Red: Arrastrar un nodo MQTT in , un nodo Inject , uno MQTT OUT , un nodo Debug y un nodo json . En el nodo MQTT in , en propiedades en la opci\u00f3n server seleccionar broker; en Topic se elige el nombre deaseado, que para este caso ser\u00eda tipoco/mooc_IoT; en name se recomienda poner algo alusivo a la acci\u00f3n (ejemplo: suscriptor). Se hace click en el lapicito al lado de donde se puso el server, se abrira una pesta\u00f1a donde se organiza la informaci\u00f3n del broker del paso anterior. En el server se colocara test.mosquitto.org el cual permite conectarse con un servidor en la nube para gestionar los mensajes enviados. En el nodo json , en la opci\u00f3n Action de la secci\u00f3n de propiedades, se debe seleccionar *Convert betweeen JSON string & Object. En el nodo debug , en la propiedad de Output seleccionar la opci\u00f3n payload En el nodo inject , en la propiedad payload se debe ingresar la informaci\u00f3n que se va a enviar en formato JSON {\"Temperatura\":24,\"Humedad\":90}. Darle un nombre alusivo a la acci\u00f3n como por ejemplo \"Envio de datos\". En el nodo MQTT out , en el server seleccionamos el broker, en topico se colaca, el topico que se ingreso en el MQTT in , topico/mooc_IoT; se le asigana el nombre de publicador en este caso. Dando en el lapicito al lado del server, se debe confirmar que la informaci\u00f3n del broker este correcta (nombre y server del broker). Conectar los flujos y si todo queda bien, debe ver as\u00ed: TD Hacer uso de la maqueta (Mini Ciudad) para realizar una practica de MQTT donde los estudiantes logren afianzar de forma practica los conceptos","title":"Clase 9"},{"location":"Clases/clase%209/#clase-9","text":"","title":"Clase 9"},{"location":"Clases/clase%209/#ti","text":"","title":"TI"},{"location":"Clases/clase%209/#protocolo-mqtt","text":"Inicialmente, MQTT fue inventado y desarrollado por IBM a finales de los 90. Tal como sugiere su nombre, se trata de un protocolo de mensajer\u00eda con soporte para la comunicaci\u00f3n as\u00edncrona entre el emisor y el receptor del mensaje, tanto en el tiempo como en el espacio. MQTT es un protocolo de red liviano y flexible que ofrece grandes ventajas para los desarrolladores de IoT, tales como: Est\u00e1 basado en el paradigma cliente/servidor. Protocolo basado en TCP. Es un protocolo est\u00e1ndar para IoT. Conectividad M2M (M\u00e1quina a M\u00e1quina). Basado en un protocolo de mensajer\u00eda publicaci\u00f3n/suscripci\u00f3n. Hace parte de los est\u00e1ndares OASIS. Es de licencia libre. La configuraci\u00f3n del protocolo MQTT contempla dos tipos de entidades en la red: se trata de un br\u00f3ker de mensajer\u00eda y numerosos clientes. El br\u00f3ker hace las veces de un servidor, el cual recibe todos los mensajes de los clientes y, en consecuencia, direcciona estos mensajes hacia los clientes de destino programados. Un cliente es cualquier \"cosa\" que pueda interactuar con el br\u00f3ker y recibir mensajes. Un cliente inicialmente puede ser considerado como un sensor, dispositivo o aplicaci\u00f3n. Es clave resaltar que dentro de la arquitectura de MQTT, el concepto de \"t\u00f3pico\" o \"tema\" juega un papel fundamental, ya que a trav\u00e9s de estos llamados \"t\u00f3picos\" se genera la comunicaci\u00f3n entre los emisores y receptores de un mensaje que previamente se hayan suscrito a un \"t\u00f3pico\" en com\u00fan, con el objetivo de establecer la comunicaci\u00f3n internamente entre ellos. La metodolog\u00eda que se utiliza es la de publicador/suscriptor, la cual permite el env\u00edo de mensajes entre generadores de informaci\u00f3n (publicadores) y receptores de la informaci\u00f3n (suscriptores). Esto se logra a trav\u00e9s de un br\u00f3ker, que act\u00faa como fuente principal para el flujo de la informaci\u00f3n entre publicadores y suscriptores que comparten la informaci\u00f3n mediante mensajes, de acuerdo con una configuraci\u00f3n previa. En la mayor\u00eda de los casos, la configuraci\u00f3n se fundamenta en t\u00f3picos o temas. En ese sentido, un cliente se conecta al br\u00f3ker y, a su vez, puede suscribirse a cualquier \"tema\" o \"t\u00f3pico\" de mensajer\u00eda del br\u00f3ker. De esta manera: (a) El cliente publica los mensajes en un tema o t\u00f3pico, enviando el mensaje y el tema al br\u00f3ker. (b) Despu\u00e9s, el br\u00f3ker remite el mensaje a todos los clientes que se suscriben a este tema o t\u00f3pico. Como los mensajes de MQTT se organizan por temas o t\u00f3picos, en una aplicaci\u00f3n de IoT se puede especificar que determinados clientes pueden interactuar con mensajes espec\u00edficos. Por ejemplo, un sensor de temperatura publicar\u00e1 el valor bajo el tema o t\u00f3pico \"sensor temp\" y se suscribir\u00e1n al tema \"supervisi\u00f3n temp\".","title":"Protocolo MQTT"},{"location":"Clases/clase%209/#ejercicio-en-node-red","text":"Para hacerse una idea de como trabajar con este protocolo, se plantea el siguiente ejercicio en Node-Red: Arrastrar un nodo MQTT in , un nodo Inject , uno MQTT OUT , un nodo Debug y un nodo json . En el nodo MQTT in , en propiedades en la opci\u00f3n server seleccionar broker; en Topic se elige el nombre deaseado, que para este caso ser\u00eda tipoco/mooc_IoT; en name se recomienda poner algo alusivo a la acci\u00f3n (ejemplo: suscriptor). Se hace click en el lapicito al lado de donde se puso el server, se abrira una pesta\u00f1a donde se organiza la informaci\u00f3n del broker del paso anterior. En el server se colocara test.mosquitto.org el cual permite conectarse con un servidor en la nube para gestionar los mensajes enviados. En el nodo json , en la opci\u00f3n Action de la secci\u00f3n de propiedades, se debe seleccionar *Convert betweeen JSON string & Object. En el nodo debug , en la propiedad de Output seleccionar la opci\u00f3n payload En el nodo inject , en la propiedad payload se debe ingresar la informaci\u00f3n que se va a enviar en formato JSON {\"Temperatura\":24,\"Humedad\":90}. Darle un nombre alusivo a la acci\u00f3n como por ejemplo \"Envio de datos\". En el nodo MQTT out , en el server seleccionamos el broker, en topico se colaca, el topico que se ingreso en el MQTT in , topico/mooc_IoT; se le asigana el nombre de publicador en este caso. Dando en el lapicito al lado del server, se debe confirmar que la informaci\u00f3n del broker este correcta (nombre y server del broker). Conectar los flujos y si todo queda bien, debe ver as\u00ed:","title":"Ejercicio en Node-Red"},{"location":"Clases/clase%209/#td","text":"Hacer uso de la maqueta (Mini Ciudad) para realizar una practica de MQTT donde los estudiantes logren afianzar de forma practica los conceptos","title":"TD"}]}